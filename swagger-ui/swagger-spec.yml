openapi: 3.0.0
paths:
  /accounts/me:
    get:
      operationId: AccountsController_me
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '401': &ref_0
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_1
          description: Forbidden error. errorCode 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404': &ref_2
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '500': &ref_3
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_4
        - logged in
      security: &ref_5
        - JWT-auth: []
  /accounts/password/init:
    get:
      operationId: AccountsController_getUpdatePasswordInit
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePasswordInitResponse'
        '401': *ref_0
        '403': *ref_1
        '404': *ref_2
        '500': *ref_3
      tags: *ref_4
      security: *ref_5
  /accounts/password:
    put:
      operationId: AccountsController_updatePassword
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10074
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_0
        '403': *ref_1
        '404': *ref_2
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_3
      tags: *ref_4
      security: *ref_5
  /activation/sidemenu:
    get:
      operationId: ActivationController_getSideMenuActivationList
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SideMenuActivationListResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500': &ref_6
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /activation/{corporationId}:
    get:
      operationId: ActivationController_getActivationList
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
              - expireDate
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationList'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /activation/{corporationId}/create:
    get:
      operationId: ActivationController_getCreateInitialInformation
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInitialInfomation'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    post:
      operationId: ActivationController_createActivation
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ICreateActivationRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegiserActivationResponse'
        '400':
          description: Bad Request error. errorCode 10006
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /activation/{corporationId}/{contractId}:
    get:
      operationId: ActivationController_getActivationDetail
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
        - name: contractId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivationDetail'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    delete:
      operationId: ActivationController_deleteActivation
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
        - name: contractId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10078
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /activation/{corporationId}/{contractId}/update:
    put:
      operationId: ActivationController_updateActivationDetail
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
        - name: contractId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IUpdateActivationRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10005 or 10006 or 10009
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    get:
      operationId: ActivationController_getUpdateInitialInformation
      parameters:
        - name: corporationId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
        - name: contractId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivationInitialInfo'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_6
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /appointments:
    get:
      operationId: AppointmentsController_getAppointmentList
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - name: contractId
          required: false
          in: query
          schema:
            nullable: true
            type: number
        - name: sort
          required: false
          in: query
          schema:
            default: startDate
            enum:
              - id
              - receptionNumber
              - startDate
              - title
              - roomName
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentListResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500':
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
    post:
      operationId: AppointmentsController_createAppointment
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppointmentRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: >-
            Bad Request error. errorCode 10052 or 10053 or 10054 or 10055 or
            10056 or 10057 or 10059 or 10060 or 10061 or 10070 or 10071 or 10076
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/init:
    get:
      operationId: AppointmentsController_getAppointmentsInit
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentsInitResponse'
        '400':
          description: Bad Request error. errorCode 10055
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/visited/{id}/init:
    get:
      operationId: AppointmentsController_getVisitedAppointmentsInit
      summary: 来訪済みアポイントメント初期表示情報取得API
      description: 来訪済みアポイントメント初期表示情報取得APIです
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitedAppointmentsInitResponse'
        '400':
          description: Bad Request error. errorCode 10052
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/visited:
    get:
      operationId: AppointmentsController_getVisitedAppointments
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: desc
            enum:
              - asc
              - desc
            type: string
        - name: contractId
          required: false
          in: query
          schema:
            nullable: true
            type: number
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
              - receptionNumber
              - startDate
              - title
              - roomName
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitedAppointmentsResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/exit-time:
    put:
      operationId: AppointmentsController_createAppointmentsExitTime
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentsExitTimeRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10064 or 10052 or 10080 or 10072
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      tags:
        - public
  /appointments/{id}:
    delete:
      operationId: AppointmentsController_deleteAppoinment
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
    put:
      operationId: AppointmentsController_putAppointments
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppointmentRequest'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10052 or 10053 or 10055 or 10059 or
            10060 or 10070 or 10075 or 10076 or 10084
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
    get:
      operationId: AppointmentsController_getAppointmentDetail
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDetailResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/visited/{id}:
    get:
      operationId: AppointmentsController_getVisitedAppointmentsDetail
      summary: 来訪済みアポイントメント詳細情報取得API
      description: 来訪済みアポイントメント詳細情報取得APIです。
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitedAppointmentsDetailResponse'
        '400':
          description: Bad Request error. errorCode 10052
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
    put:
      operationId: AppointmentsController_putAppointmentsVisited
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentsVisitedRequest'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10052 or 10059 or 10060 or 10070 or
            10075 or 10076 or 10084
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/{id}/{appointmentVisitorId}/qr-code:
    get:
      operationId: AppointmentsController_getQrCodeAppointmentsDetail
      summary: QRコード取得API
      description: >-
        パラメータを検証し、base64エンコードされたQRコード画像を出力します。<br />QRコードには以下の要素が含まれます。<br
        />appointmentId<br />appointmentVisitorId
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
        - name: appointmentVisitorId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeAppointmentsDetailResponse'
        '400':
          description: Bad Request error. errorCode 10052
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /appointments/{id}/init:
    get:
      operationId: AppointmentsController_getAppointmentInitDetail
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentInitDetailResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /app-settings/upload-file:
    post:
      operationId: AppSettingsController_uploadFile
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFileRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
        '400':
          description: Bad Request error. errorCode 10023 or 10025
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101. errorCode 10026
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_7
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - admin
  /app-settings/update-date-time:
    post:
      operationId: AppSettingsController_createUpdateDateTime
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppSettingUpdateDateTime'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: Bad Request error. errorCode 10081
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_7
      security:
        - JWT-auth: []
      tags:
        - admin
  /app-settings:
    put:
      operationId: AppSettingsController_updateAppSettings
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppSettingsReq'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10027 or 10028 or 10029 or 10030 or
            10031 or 10035 or 10036 or 10037 or 10038 or 10039 or 10040 or 10093
            or 10094
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_7
      security:
        - JWT-auth: []
      tags:
        - admin
    get:
      operationId: AppSettingsController_getAppSetting
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: groupDisplayId
          required: false
          in: query
          schema:
            minimum: 1
            nullable: true
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppSettingResponse'
        '400':
          description: Bad Request error. errorCode 10023 or 10025
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_7
      security:
        - JWT-auth: []
      tags:
        - admin
  /app-settings/{groupDisplayId}:
    put:
      operationId: AppSettingsController_updateAppSettingsCompanySelect
      parameters:
        - name: groupDisplayId
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppSettingCompnanySelectRequest'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10023 or 10029 or 10030 or 10031 or
            10033 or 10034 or 10035 or 10036 or 10039 or 10040 or 10094
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_7
      security:
        - JWT-auth: []
      tags:
        - admin
  /app-settings/default:
    get:
      operationId: AppSettingsController_getAppSettingDefault
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAppSettingDefaultResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_7
      security:
        - JWT-auth: []
      tags:
        - admin
  /appointment-corporations/{id}:
    get:
      operationId: AppointmentCorporationsController_getAppointmentCorporation
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentCorporationResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_8
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags:
        - admin
      security:
        - &ref_9
          JWT-auth: []
  /appointment-corporations/update/{id}:
    get:
      operationId: >-
        AppointmentCorporationsController_getUpdateInitializeInformationAppointmentCorporation
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitUpdateAppointmentCoroprationResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_8
      tags:
        - admin
        - admin
      security:
        - *ref_9
        - JWT-auth: []
    put:
      operationId: AppointmentCorporationsController_updateAppointmentCorporation
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppointmentCorporationRequest'
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_8
      tags:
        - admin
        - admin
      security:
        - *ref_9
        - JWT-auth: []
  /chat-settings:
    post:
      operationId: ChatSettingsController_createChatSetting
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatSettingRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: Bad Request error. errorCode 10023 or 10025
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': &ref_12
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_13
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_10
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_14
        - admin
      security: &ref_15
        - &ref_11
          JWT-auth: []
    get:
      operationId: ChatSettingsController_getChatSettingsList
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: groupDisplayId
          required: false
          in: query
          schema:
            minimum: 1
            nullable: true
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatSettingsListResponse'
        '400':
          description: Bad Request error. errorCode 10023 or 10025 or 10095
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_10
      tags:
        - admin
        - admin
      security:
        - *ref_11
        - JWT-auth: []
  /chat-settings/{id}:
    put:
      operationId: ChatSettingsController_updateChatSetting
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChatSettingRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10046
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_12
        '403': *ref_13
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_10
      tags: *ref_14
      security: *ref_15
    delete:
      operationId: ChatSettingsController_deleteChatSetting
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_10
      tags:
        - admin
        - admin
      security:
        - *ref_11
        - JWT-auth: []
  /chat-settings/csv/import:
    post:
      operationId: ChatSettingsController_importChatSetting
      summary: チャット設定CSVインポートAPI
      description: >-
        チャット設定情報をCSVでインポートするAPIです。<br />     
        text/csv形式のファイルに受付種別（0:面接,1:宅配,2:秘書,3:その他）、通知種別（1:slack,2:teams,3:chatwork）、通知許可（1:有,0:無）、備考、webhookURL、APIトークン、ルームIDを設定します。
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChatSettingCsvUploadRequest'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request error. errorCode 10023 or 10025
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '415':
          description: Unsupported Media Type error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeErrorResponse'
        '422':
          description: >-
            Unprocessable Entity error. default errorCode 101. errorCode 10042
            or 10043 or 10047
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_10
      tags:
        - admin
        - admin
      security:
        - *ref_11
        - JWT-auth: []
  /chat-settings/csv/export:
    get:
      operationId: ChatSettingsController_exportFaceminUser
      summary: チャット設定CSVエクスポートAPI
      description: >-
        チャット設定情報をCSVでエクスポートするAPIです。<br />    文字コードUTF-8
        BOM、改行コードLFのファイル「chat_settings.csv」を返します。
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: languageCode
          required: true
          in: query
          schema:
            enum:
              - ja
              - en
              - vi
            type: string
      responses:
        '200':
          description: ファイル「chat_settings.csv」
        '400':
          description: Bad Request error. errorCode 10065
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_10
      tags:
        - admin
        - admin
      security:
        - *ref_11
        - JWT-auth: []
  /corporation:
    get:
      operationId: CorporationController_getCorporations
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: keyword
          required: false
          in: query
          schema:
            maxLength: 256
            type: string
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporationsResponse'
        '401': &ref_16
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_17
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_18
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_19
        - i-enter admin
      security: &ref_20
        - JWT-auth: []
    post:
      operationId: CorporationController_createCorporation
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorporationCreateRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CorporationCreateResponse'
        '401': *ref_16
        '403': *ref_17
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_18
      tags: *ref_19
      security: *ref_20
  /corporation/{id}:
    get:
      operationId: CorporationController_getCorporation
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCorporationResponse'
        '401': *ref_16
        '403': *ref_17
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_18
      tags: *ref_19
      security: *ref_20
    delete:
      operationId: CorporationController_deleteCorporation
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10079
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_16
        '403': *ref_17
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_18
      tags: *ref_19
      security: *ref_20
    put:
      operationId: CorporationController_updateCorporation
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCorporationRequest'
      responses:
        '200':
          description: ''
        '401': *ref_16
        '403': *ref_17
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_18
      tags: *ref_19
      security: *ref_20
  /devices:
    delete:
      operationId: DevicesController_deleteDevices
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDevicesRequest'
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500':
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /groups/init:
    get:
      operationId: GroupsController_getInitCreateGroup
      parameters:
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitCreateGroupResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': &ref_21
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_22
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_23
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_24
        - admin
      security: &ref_25
        - JWT-auth: []
  /groups:
    post:
      operationId: GroupsController_createGroup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: >-
            Bad Request error. errorCode 10010 or 10011 or 10013 or 10015 or
            10018
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
    delete:
      operationId: GroupsController_deleteGroups
      parameters:
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10013 or 10019 or 10020
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /groups/{id}:
    get:
      operationId: GroupsController_getGroupDetail
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupDetail'
        '400':
          description: Bad Request error. errorCode 10014
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
    put:
      operationId: GroupsController_updateGroup
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupRequest'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10010 or 10011 or 10013 or 10015 or
            10018 or 10087 or 10088
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
    delete:
      operationId: GroupsController_deleteGroup
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10013 or 10019 or 10020
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /groups/{id}/init:
    get:
      operationId: GroupsController_getInitUpdateGroup
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitUpdateGroupResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /groups/hierarchy/update/init:
    get:
      operationId: GroupsController_getInitUpdateGroupHierarchies
      parameters:
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitUpdateGroupHierarchiesResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /groups/hierarchy/update:
    put:
      operationId: GroupsController_updateGroupHierarchies
      summary: 部署階層編集
      description: リクエストの部署配列上で上位部署が下位部署より前に設定されている必要があります。
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupHierarchiesRequest'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10013 or 10018 or 10049 or 10050 or
            10051
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /groups/{id}/group-users/init:
    get:
      operationId: GroupsController_getGroupIdGroupUsersInit
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupIdGroupUsersInitResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /groups/{id}/group-users:
    put:
      operationId: GroupsController_updateGroupUsers
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupUsersRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10015 or 10075
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_21
        '403': *ref_22
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_23
      tags: *ref_24
      security: *ref_25
  /group-users/init:
    get:
      operationId: GroupUsersController_getInitCreateGroupUser
      parameters:
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitCreateGroupUserResponse'
        '400':
          description: Bad Request error. errorCode 10013 or 10022
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': &ref_26
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_27
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_28
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_29
        - admin
      security: &ref_30
        - JWT-auth: []
  /group-users:
    post:
      operationId: GroupUsersController_createGroup
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupUserRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: >-
            Bad Request error. errorCode 10011 or 10013 or 10015 or 10016 or
            10017 or 10022
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_26
        '403': *ref_27
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_28
      tags: *ref_29
      security: *ref_30
  /group-users/{id}/init:
    get:
      operationId: GroupUsersController_getInitUpdateGroupUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitUpdateGroupUserResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_26
        '403': *ref_27
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_28
      tags: *ref_29
      security: *ref_30
  /group-users/{id}:
    put:
      operationId: GroupUsersController_updateGroupUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupUserRequest'
      responses:
        '200':
          description: ''
        '400':
          description: >-
            Bad Request error. errorCode 10011 or 10013 or 10015 or 10016 or
            10017
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_26
        '403': *ref_27
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_28
      tags: *ref_29
      security: *ref_30
    get:
      operationId: GroupUsersController_getGroupUserDetail
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUserDetail'
        '400':
          description: Bad Request error. errorCode 10014
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_26
        '403': *ref_27
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_28
      tags: *ref_29
      security: *ref_30
    delete:
      operationId: GroupUsersController_deleteGroupUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_26
        '403': *ref_27
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_28
      tags: *ref_29
      security: *ref_30
  /group-users/search:
    get:
      operationId: GroupUsersController_getGroupUsersSearch
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupUsersSearchResponse'
        '401': *ref_26
        '403': *ref_27
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_28
      tags: *ref_29
      security: *ref_30
  /home:
    get:
      operationId: HomeController_getHomeInfo
      parameters:
        - name: contractId
          required: false
          in: query
          schema:
            minimum: 1
            nullable: true
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeInfoResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500':
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - logged in
  /locales:
    get:
      operationId: LocalesController_index
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500': &ref_31
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /locales/time-zone:
    get:
      operationId: LocalesController_getTimeZone
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeZoneResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_31
      security:
        - JWT-auth: []
      tags:
        - logged in
  /login:
    post:
      operationId: LoginController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
      tags:
        - auth
  /forgot-password/send:
    post:
      operationId: ForgotPasswordController_send
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
      responses:
        '201':
          description: ''
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_32
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_33
        - public
  /forgot-password/reset:
    post:
      operationId: ForgotPasswordController_reset
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordResetRequest'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request error. errorCode 10073
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_32
      tags: *ref_33
  /phone-books:
    get:
      operationId: PhoneBooksController_getPhoneBookList
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: phoneBookId
          required: false
          in: query
          schema:
            minimum: 1
            nullable: true
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneBookList'
        '400':
          description: Bad Request error. errorCode 10014
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': &ref_34
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_35
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_36
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_37
        - admin
      security: &ref_38
        - &ref_39
          JWT-auth: []
    post:
      operationId: PhoneBooksController_createPhoneBook
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePhoneBookRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: Bad Request error. errorCode 10012 or 10069 or 10082
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_34
        '403': *ref_35
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_36
      tags: *ref_37
      security: *ref_38
  /phone-books/{id}:
    get:
      operationId: PhoneBooksController_getUpdateBookingPhoneBook
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePhoneBookInitResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_34
        '403': *ref_35
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_36
      tags: *ref_37
      security: *ref_38
    put:
      operationId: PhoneBooksController_putBookingPhoneBook
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePhoneBookRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10013 or 10069
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_34
        '403': *ref_35
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_36
      tags: *ref_37
      security: *ref_38
    delete:
      operationId: PhoneBooksController_deletePhoneBook
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10013 or 10083 or 10085
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_34
        '403': *ref_35
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_36
      tags: *ref_37
      security: *ref_38
  /phone-books/csv/import:
    post:
      operationId: PhoneBooksController_importPhoneBook
      summary: 電話帳CSVインポートAPI
      description: 電話帳情報をCSVでインポートするAPIです。
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneBookCsvUploadRequest'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request error. errorCode 10045 and error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponseWithMessages'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '415':
          description: Unsupported Media Type error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeErrorResponse'
        '422':
          description: >-
            Unprocessable Entity error. default errorCode 101. errorCode 10042
            or 10043 or 10044 or 10097 or 10098
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_36
      tags:
        - admin
        - admin
      security:
        - *ref_39
        - JWT-auth: []
  /phone-books/csv/export:
    get:
      operationId: PhoneBooksController_exportPhoneBooks
      summary: 電話帳CSVエクスポートAPI
      description: >-
        電話帳情報をエクスポートするAPIです。<br />      1リクエストで最大5000件データを返します。<br />     
        lastIdが返ってきた（5000件ある）場合は再度そのIDでリクエストし取得する必要があります。<br />     
        lastIdで最後のIDだった場合、次の取得は空になります。）<br />      ※Swagger
        Previewで実行する場合、データが多いとすぐにレスポンスを表示できない（重い）ので注意してください。。
      parameters:
        - name: lastId
          required: false
          in: query
          description: 前回取得したlastIdを設定
          schema:
            minimum: 1
            type: number
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneBookExportResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_36
      tags:
        - admin
        - admin
      security:
        - *ref_39
        - JWT-auth: []
  /news:
    post:
      operationId: NewsController_createOneNews
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOneNewsRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_40
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    get:
      operationId: NewsController_getNewsList
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: desc
            enum:
              - desc
            type: string
        - name: sort
          required: false
          in: query
          schema:
            default: stratDate
            enum:
              - startDate
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewsListResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_40
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /news/{id}:
    get:
      operationId: NewsController_getOneNews
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOneNewsResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_40
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    put:
      operationId: NewsController_updateOneNews
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOneNewsRequest'
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_40
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    delete:
      operationId: NewsController_deleteNews
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_40
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /token:
    post:
      operationId: TokenController_refresh
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
      tags:
        - auth
  /users/i-enter-admin:
    get:
      operationId: UsersController_getIEnterAdminUsers
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IEnterAdminUsersResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500': &ref_41
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    post:
      operationId: UsersController_createIEnterAdminUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIEnterAdminUserRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: Bad Request error. errorCode 10004
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /users/i-enter-admin/{id}:
    get:
      operationId: UsersController_getIEnterAdminUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IEnterAdminUserResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    put:
      operationId: UsersController_updateIEnterAdminUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIEnterAdminUserRequest'
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
    delete:
      operationId: UsersController_deleteIEnterAdminUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /users/facemin:
    get:
      operationId: UsersController_getFaceminUsers
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: asc
            enum:
              - asc
            type: string
        - name: keyword
          required: false
          in: query
          schema:
            maxLength: 256
            type: string
        - name: isOperationRepresentative
          required: false
          in: query
          schema:
            type: boolean
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaceminUsersResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
    post:
      operationId: UsersController_createFaceminUser
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFaceminUserRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommonIdResponse'
        '400':
          description: Bad Request error. errorCode 10004 or 10007
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
    delete:
      operationId: UsersController_deleteFaceminUsers
      parameters: []
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10067
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
  /users/facemin/{id}:
    get:
      operationId: UsersController_getFaceminUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaceminUserResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
    put:
      operationId: UsersController_updateFaceminUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFaceminUserRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10007 or 10008
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
    delete:
      operationId: UsersController_deleteFaceminUser
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10021 or 10067
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
  /users/facemin/csv/import:
    post:
      operationId: UsersController_importFaceminUser
      summary: FACEMINアカウントCSVインポートAPI
      description: >-
        FACEMINアカウント情報をCSVでインポートするAPIです。<br />     
        text/csv形式のファイルにアカウントID、名前、メールアドレス、権限（1:管理者,2:一般）を設定します。
      parameters: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CsvUploadRequest'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request error. errorCode 10045 or 10044 and error messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponseWithMessages'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '415':
          description: Unsupported Media Type error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsupportedMediaTypeErrorResponse'
        '422':
          description: >-
            Unprocessable Entity error. default errorCode 101. errorCode 10042
            or 10043 or 10044
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
  /users/facemin/csv/export:
    get:
      operationId: UsersController_exportFaceminUser
      summary: FACEMINアカウントCSVエクスポートAPI
      description: >-
        FACEMINアカウント情報をエクスポートするAPIです。<br />        1リクエストで最大5000件データを返します。<br
        />        lastIdが返ってきた（5000件ある）場合は再度そのIDでリクエストし取得する必要があります。<br />       
        （lastIdで最後のIDだった場合、次の取得は空になります。）<br />        ※Swagger
        Previewで実行する場合、データが多いとすぐにレスポンスを表示できない（重い）ので注意してください。
      parameters:
        - name: lastId
          required: false
          in: query
          description: 前回取得したlastIdを設定
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FaceminUserExportResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
  /users/facemin-link:
    get:
      operationId: UsersController_getLinkedFaceminUsers
      parameters:
        - name: phoneBookId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: name
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedFaceminUsersResponse'
        '400':
          description: Bad Request error. errorCode 10013
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - admin
  /users/facemin-pic:
    get:
      operationId: UsersController_getInformationFaceminPics
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InformationFaceminPicsResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_41
      security:
        - JWT-auth: []
      tags:
        - general
  /receptions/csv/export:
    get:
      operationId: ReceptionsController_exportReception
      summary: 来訪履歴エクスポートAPI
      description: >-
        来訪履歴をエクスポートするAPIです。<br />    1リクエストで最大5000件データを返します。<br />   
        lastIdが返ってきた（5000件ある）場合は再度そのIDでリクエストし取得する必要があります。<br />   
        （lastIdで最後のIDだった場合、次の取得は空になります。）<br />    ※Swagger
        Previewで実行する場合、データが多いとすぐにレスポンスを表示できない（重い）ので注意してください。
      parameters:
        - name: contractId
          required: true
          in: query
          schema:
            minimum: 1
            type: number
        - name: visitTimeStart
          required: false
          in: query
          schema:
            format: date
            nullable: true
            type: string
        - name: visitTimeEnd
          required: false
          in: query
          schema:
            format: date
            nullable: true
            type: string
        - name: lastId
          required: false
          in: query
          description: 前回取得したlastIdを設定
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionsExportResponse'
        '400':
          description: Bad Request error. errorCode 10066
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_42
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - admin
  /receptions/{id}:
    get:
      operationId: ReceptionsController_getReceptionsDetail
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionsDetail'
        '400':
          description: Bad Request error. errorCode 10066
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_42
      security:
        - JWT-auth: []
      tags:
        - admin
    put:
      operationId: ReceptionsController_updateReceptions
      summary: 来訪履歴編集API
      description: 来訪履歴編集APIです。<br />
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReceptionsRequest'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10066
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_42
      security:
        - JWT-auth: []
      tags:
        - admin
  /receptions:
    get:
      operationId: ReceptionsController_getReceptionsList
      summary: 来訪履歴一覧取得API
      description: |-
        receptionsテーブルから一覧情報を取得します。<br />
                              ログインユーザーの企業に属するレコードを取得します。<br />
                              contractIdが指定されている場合は、企業とアクティベーションに属するレコードを取得します。
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: contractId
          required: false
          in: query
          schema:
            minimum: 1
            type: number
        - name: visitTimeStart
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: visitTimeEnd
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
              - visitTime
              - exitTime
              - route
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceptionsResponse'
        '400':
          description: Bad Request error. errorCode 10066
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_42
      security:
        - JWT-auth: []
      tags:
        - admin
  /receptions/{id}/init:
    get:
      operationId: ReceptionsController_getArrivalHistoryAndInitialInfo
      summary: 来訪履歴編集初期情報取得API
      description: 来訪履歴編集初期情報を取得するAPIです。<br />
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrivalHistoryAndInitialInfo'
        '400':
          description: Bad Request error. errorCode 10066
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_42
      security:
        - JWT-auth: []
      tags:
        - admin
  /userOperationRepresentatives/i-enter-admin:
    get:
      operationId: UserOperationRepresentativesController_getUserOperationRepresentatives
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: keyword
          required: false
          in: query
          schema:
            maxLength: 256
            type: string
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
              - name
              - email
              - role
              - corporationId
              - corporationName
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOperationRepresentativesResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500': &ref_43
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /userOperationRepresentatives/i-enter-admin/email/send:
    post:
      operationId: >-
        UserOperationRepresentativesController_sendMailUserOperationRepresentatives
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InformationEmailRequest'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request error. errorCode 10077
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '500': *ref_43
      security:
        - JWT-auth: []
      tags:
        - i-enter admin
  /visitors/search:
    get:
      operationId: VisitorsController_getVisitorsSearch
      parameters:
        - name: keyword
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitorsSearchResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_44
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - general
  /visitors/{id}:
    delete:
      operationId: VisitorsController_deleteVisitor
      summary: 来訪者情報削除API
      description: >-
        来訪者情報を削除するAPIです。<br />       
        visitorsテーブルの情報でリクエストのIDと一致したレコードを削除します。<br />       
        appointmentVisitorsテーブルに削除対象のvisitorsと紐づいているレコードがあった場合、レコードのvisitor_idをnullに変更します。<br
        />        来訪者に紐づくアポイントメントが未来訪の場合[10067]のエラー<br />       
        来訪者に紐づくアポイントメントの開始日が当日の場合は[10068]のエラー<br />
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10067 or 10068
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_44
      security:
        - JWT-auth: []
      tags:
        - admin
    put:
      operationId: VisitorsController_updateVisitors
      summary: 来訪者情報編集API
      description: >-
        visitorsテーブルの情報でログインユーザーのcorporation_idと一致し、request.idに一致するレコードを更新します。<br
        />
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVisitorsRequest'
      responses:
        '200':
          description: ''
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_44
      security:
        - JWT-auth: []
      tags:
        - admin
    get:
      operationId: VisitorsController_getVisitorDetail
      summary: 来訪者情報詳細取得API
      description: >-
        来訪者情報詳細取得APIです。<br />   
        visitorsテーブルの情報でログインユーザーのcorporation_idと一致し、request.idに一致するレコードを取得します。
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitorDetailResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_44
      security:
        - JWT-auth: []
      tags:
        - admin
  /visitors:
    get:
      operationId: VisitorsController_getVisitors
      summary: 来訪者情報一覧取得API
      description: >-
        来訪者情報一覧を取得するAPIです。<br />       
        visitorsテーブルの情報でログインユーザーのcorporation_idと一致し、かつnameもしくはcompany_nameがkeywordに一致するものを検索します。<br
        />        searchStringは部分一致かつ、大文字小文字区別なしです。
      parameters:
        - name: page
          required: false
          in: query
          schema:
            minimum: 1
            default: 1
            type: number
        - name: limit
          required: false
          in: query
          schema:
            default: 50
            enum:
              - 50
              - 100
              - 200
            type: number
        - name: order
          required: false
          in: query
          schema:
            default: asc
            enum:
              - asc
              - desc
            type: string
        - name: keyword
          required: false
          in: query
          schema:
            maxLength: 256
            type: string
        - name: sort
          required: false
          in: query
          schema:
            default: id
            enum:
              - id
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitorsResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_44
      security:
        - JWT-auth: []
      tags:
        - admin
  /visitors/{id}/init:
    get:
      operationId: VisitorsController_getVisitorsInit
      summary: '来訪者編集 初期情報取得 API '
      description: >-
        来訪者編集 初期情報取得 API です。<br />     
        visitorsテーブルの情報でrequest.idに一致するレコードを取得します。
      parameters:
        - name: id
          required: true
          in: path
          schema:
            minimum: 1
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisitorsInitResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_44
      security:
        - JWT-auth: []
      tags:
        - admin
  /app-versions:
    get:
      operationId: AppVersionsController_getAppVersions
      summary: アプリバージョン取得API
      description: >-
        アプリバージョンを取得するAPIです。<br />     
        appVersionsテーブルの中から、idが一番大きいレコードを１件検索し、それを返却します。
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVersionsResponse'
        '401': &ref_45
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_46
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_47
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_48
        - i-enter admin
      security: &ref_49
        - JWT-auth: []
    post:
      operationId: AppVersionsController_createAppVersions
      summary: アプリバージョン登録API
      description: >-
        アプリバージョンを登録するAPIです。<br />     
        appVersionsテーブルにレコードを新規で作成します。また、作成者のid/name/emailをログとしてappVersionsテーブルに記録します。
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppVersionsRequest'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppVersionsResponse'
        '401': *ref_45
        '403': *ref_46
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_47
      tags: *ref_48
      security: *ref_49
  /inquiries:
    post:
      operationId: InquiriesController_createInquiry
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInquiryRequest'
      responses:
        '201':
          description: ''
        '400':
          description: Bad Request error. errorCode 10086
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401':
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403':
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
      security:
        - JWT-auth: []
      tags:
        - admin
  /ip-restrictions:
    get:
      operationId: IpRestrictionsController_getIpRestrictions
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpRestrictionsResponse'
        '400':
          description: Bad Request error. errorCode 10102
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': &ref_50
          description: Unauthorized error. errorCode 102 or 103 or 110
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedErrorResponse'
        '403': &ref_51
          description: Forbidden error. errorCode 105 or 109
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenErrorResponse'
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': &ref_52
          description: unexpected error. errorCode 999
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnexpectedErrorResponse'
      tags: &ref_53
        - admin
      security: &ref_54
        - JWT-auth: []
    put:
      operationId: IpRestrictionsController_updateIpRestrictions
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIpRestrictionReq'
      responses:
        '200':
          description: ''
        '400':
          description: Bad Request error. errorCode 10102
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestErrorResponse'
        '401': *ref_50
        '403': *ref_51
        '404':
          description: Not Found error. errorCode 104
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundErrorResponse'
        '409':
          description: Conflict error. errorCode 106
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictErrorResponse'
        '422':
          description: Unprocessable Entity error. default errorCode 101.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityErrorResponse'
        '500': *ref_52
      tags: *ref_53
      security: *ref_54
info:
  title: i-face-admin-api
  description: The i-face-admin-api API description
  version: 1.0.0
  contact: {}
tags: []
servers:
  - url: http://localhost:3100/dev
    description: local
components:
  securitySchemes:
    JWT-auth:
      scheme: bearer
      bearerFormat: JWT
      type: http
      description: Enter JWT token
  schemas:
    UnauthorizedErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 103
      required:
        - errorCode
    ForbiddenErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 105
      required:
        - errorCode
    NotFoundErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 104
      required:
        - errorCode
    UnexpectedErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 999
      required:
        - errorCode
    Account:
      type: object
      properties:
        corporationName:
          type: string
        name:
          type: string
        role:
          type: string
        email:
          type: string
        isIpRestrictionEnabled:
          type: boolean
      required:
        - corporationName
        - name
        - role
        - email
        - isIpRestrictionEnabled
    AccountResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Account'
      required:
        - data
    UpdatePasswordInitData:
      type: object
      properties:
        version:
          type: number
      required:
        - version
    UpdatePasswordInitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UpdatePasswordInitData'
      required:
        - data
    UpdatePasswordRequest:
      type: object
      properties:
        currentPassword:
          type: string
          default: currentPassword
        newPassword:
          type: string
          default: P@ssw0rd123!
        version:
          type: number
          minimum: 1
      required:
        - currentPassword
        - newPassword
        - version
    BadRequestErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          enum:
            - 10102
      required:
        - errorCode
    UnprocessableEntityErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 101
      required:
        - errorCode
    SideMenuActivationInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        isAppointmentEnabled:
          type: boolean
        isFacialIdentificationEnabled:
          type: boolean
        isAppointmentHistoryEnabled:
          type: boolean
        isSelectCompanyEnabled:
          type: boolean
      required:
        - id
        - name
        - plan
        - isAppointmentEnabled
        - isFacialIdentificationEnabled
        - isAppointmentHistoryEnabled
        - isSelectCompanyEnabled
    SideMenuActivationList:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/SideMenuActivationInfo'
      required:
        - list
    SideMenuActivationListResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SideMenuActivationList'
      required:
        - data
    Corporation:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    IActivationListInfo:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        name:
          type: string
        plan:
          type: string
        userCount:
          type: number
        maxUser:
          type: number
          nullable: true
        deviceCount:
          type: number
        maxDevice:
          type: number
          nullable: true
        startDate:
          type: string
          format: date
        expireDate:
          type: string
          format: date
        createdDate:
          type: string
          format: date
      required:
        - contractId
        - name
        - plan
        - userCount
        - maxUser
        - deviceCount
        - maxDevice
        - startDate
        - expireDate
        - createdDate
    IActivationList:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
        order:
          type: string
          default: asc
        corporation:
          $ref: '#/components/schemas/Corporation'
        totalDeviceCount:
          type: number
        list:
          type: array
          items:
            $ref: '#/components/schemas/IActivationListInfo'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - corporation
        - totalDeviceCount
        - list
    ActivationList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IActivationList'
      required:
        - data
    LocaleInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    ICreateInitialInfomation:
      type: object
      properties:
        corporation:
          $ref: '#/components/schemas/Corporation'
        localeList:
          type: array
          items:
            $ref: '#/components/schemas/LocaleInfo'
      required:
        - corporation
        - localeList
    CreateInitialInfomation:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ICreateInitialInfomation'
      required:
        - data
    ICreateActivationRequest:
      type: object
      properties:
        name:
          type: string
        authenticationKey:
          type: string
        authenticationCode:
          type: string
        plan:
          type: string
        isAppointmentEnabled:
          type: boolean
        isFacialIdentificationEnabled:
          type: boolean
        isAppointmentHistoryEnabled:
          type: boolean
        isSelectCompanyEnabled:
          type: boolean
        localeId:
          type: number
          minimum: 1
        maxUser:
          type: number
          nullable: true
          description: nullまたはundefinedの時は30000件で登録される
        maxDevice:
          type: number
          nullable: true
        startDate:
          type: string
          nullable: true
          format: date
        expireDate:
          type: string
          format: date
        note:
          type: string
          nullable: true
        contractLanguages:
          default:
            - ja
            - en
          type: array
          items:
            type: string
      required:
        - name
        - authenticationKey
        - authenticationCode
        - plan
        - isAppointmentEnabled
        - isFacialIdentificationEnabled
        - isAppointmentHistoryEnabled
        - isSelectCompanyEnabled
        - localeId
        - expireDate
        - contractLanguages
    IRegiserActivationResponse:
      type: object
      properties:
        contractId:
          type: number
      required:
        - contractId
    RegiserActivationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IRegiserActivationResponse'
      required:
        - data
    IActivationDetailInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        authenticationKey:
          type: string
        authenticationCode:
          type: string
        localeName:
          type: string
        contractLanguages:
          type: array
          items:
            type: string
        maxUser:
          type: number
          nullable: true
        maxDevice:
          type: number
          nullable: true
        plan:
          type: string
        isAppointmentEnabled:
          type: boolean
        isFacialIdentificationEnabled:
          type: boolean
        isAppointmentHistoryEnabled:
          type: boolean
        isSelectCompanyEnabled:
          type: boolean
        startDate:
          type: string
          format: date
        expireDate:
          type: string
          format: date
        note:
          type: string
          nullable: true
      required:
        - id
        - name
        - authenticationKey
        - authenticationCode
        - localeName
        - contractLanguages
        - maxUser
        - maxDevice
        - plan
        - isAppointmentEnabled
        - isFacialIdentificationEnabled
        - isAppointmentHistoryEnabled
        - isSelectCompanyEnabled
        - startDate
        - expireDate
        - note
    ActivationDevice:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        createdAt:
          type: string
      required:
        - id
        - name
        - createdAt
    IActivationDetail:
      type: object
      properties:
        corporation:
          $ref: '#/components/schemas/Corporation'
        activation:
          $ref: '#/components/schemas/IActivationDetailInfo'
        devices:
          type: array
          items:
            $ref: '#/components/schemas/ActivationDevice'
      required:
        - corporation
        - activation
        - devices
    ActivationDetail:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IActivationDetail'
      required:
        - data
    IUpdateActivationRequest:
      type: object
      properties:
        name:
          type: string
        authenticationKey:
          type: string
        authenticationCode:
          type: string
        plan:
          type: string
        isAppointmentEnabled:
          type: boolean
        isFacialIdentificationEnabled:
          type: boolean
        isAppointmentHistoryEnabled:
          type: boolean
        isSelectCompanyEnabled:
          type: boolean
        maxUser:
          type: number
          nullable: true
          description: nullまたはundefinedの時は30000件で登録される
        maxDevice:
          type: number
          nullable: true
        startDate:
          type: string
          format: date
        expireDate:
          type: string
          format: date
        note:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - name
        - authenticationKey
        - authenticationCode
        - plan
        - isAppointmentEnabled
        - isFacialIdentificationEnabled
        - isAppointmentHistoryEnabled
        - isSelectCompanyEnabled
        - startDate
        - expireDate
        - version
    ConflictErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 106
      required:
        - errorCode
    IUpdateActivationInitialInfo:
      type: object
      properties:
        corporation:
          $ref: '#/components/schemas/Corporation'
        id:
          type: number
          minimum: 1
        name:
          type: string
        authenticationKey:
          type: string
        authenticationCode:
          type: string
        localeName:
          type: string
        contractLanguages:
          type: array
          items:
            type: string
        maxUser:
          type: number
          nullable: true
        maxDevice:
          type: number
          nullable: true
        plan:
          type: string
        isAppointmentEnabled:
          type: boolean
        isFacialIdentificationEnabled:
          type: boolean
        isAppointmentHistoryEnabled:
          type: boolean
        isSelectCompanyEnabled:
          type: boolean
        startDate:
          type: string
          format: date
        expireDate:
          type: string
          format: date
        note:
          type: string
          nullable: true
        version:
          type: number
      required:
        - corporation
        - id
        - name
        - authenticationKey
        - authenticationCode
        - localeName
        - contractLanguages
        - maxUser
        - maxDevice
        - plan
        - isAppointmentEnabled
        - isFacialIdentificationEnabled
        - isAppointmentHistoryEnabled
        - isSelectCompanyEnabled
        - startDate
        - expireDate
        - note
        - version
    UpdateActivationInitialInfo:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IUpdateActivationInitialInfo'
      required:
        - data
    AppointmentInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        receptionNumber:
          type: number
          minimum: 1
        startDate:
          format: date-time
          type: string
        title:
          type: string
          nullable: true
        visitorList:
          type: array
          items:
            type: string
        userList:
          type: array
          items:
            type: string
        roomName:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
      required:
        - id
        - receptionNumber
        - startDate
        - title
        - visitorList
        - userList
        - roomName
        - note
    IAppointmentListResponse:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
          default: startDate
          enum: &ref_55
            - id
            - receptionNumber
            - startDate
            - title
            - roomName
        order:
          type: string
          default: desc
          enum:
            - asc
            - desc
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentInfo'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - appointments
    AppointmentListResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IAppointmentListResponse'
      required:
        - data
    PicInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
          minimum: 1
        email:
          type: string
      required:
        - id
        - name
        - email
    GroupUsersInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    GroupsInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
          nullable: true
        name:
          type: string
      required:
        - id
        - name
    UserInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
      required:
        - id
    appointmentCorporationsName:
      type: object
      properties:
        name:
          type: string
        address:
          type: string
      required:
        - name
        - address
    AppointmentsData:
      type: object
      properties:
        pic:
          $ref: '#/components/schemas/PicInfo'
        groupUsers:
          type: array
          items:
            $ref: '#/components/schemas/GroupUsersInfo'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupsInfo'
        plan:
          type: string
        user:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/UserInfo'
        appointmentCorporations:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/appointmentCorporationsName'
        sessionGroupId:
          type: number
          minimum: 1
          nullable: true
        sessionGroupUserId:
          type: number
          minimum: 1
          nullable: true
        timezone:
          type: string
      required:
        - pic
        - groupUsers
        - groups
        - plan
        - user
        - appointmentCorporations
        - sessionGroupId
        - sessionGroupUserId
        - timezone
    AppointmentsInitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppointmentsData'
      required:
        - data
    AppointmentUserInit:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        corporationName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        userId:
          type: number
          nullable: true
        email:
          type: string
          nullable: true
        version:
          type: number
          default: 1
        usersVersion:
          type: number
          default: 1
      required:
        - id
        - corporationName
        - name
        - userId
        - email
        - version
        - usersVersion
    AppointmentVisitorInit:
      type: object
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
        id:
          type: number
          minimum: 1
        version:
          type: number
          default: 1
        visitorsVersion:
          type: number
          default: 1
      required:
        - name
        - email
        - companyName
        - id
        - version
        - visitorsVersion
    AppointmentsGroupUser:
      type: object
      properties:
        id:
          type: number
          default: 1
        name:
          type: string
          nullable: true
        version:
          type: number
          default: 1
      required:
        - id
        - name
        - version
    Group:
      type: object
      properties:
        id:
          type: number
          default: 1
        name:
          type: string
          nullable: true
        version:
          type: number
          default: 1
      required:
        - id
        - name
        - version
    AppointmentSelectedReceptionists:
      type: object
      properties:
        id:
          type: number
          default: 1
        groupUsers:
          $ref: '#/components/schemas/AppointmentsGroupUser'
        groups:
          $ref: '#/components/schemas/Group'
        version:
          type: number
          default: 1
      required:
        - id
        - groupUsers
        - groups
        - version
    DirectReceptionistChatSettingInit:
      type: object
      properties:
        chatType:
          type: string
          enum: &ref_56
            - EMAIL
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
        email:
          type: string
          nullable: true
        webhook:
          type: string
          nullable: true
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        mentions:
          nullable: true
          type: array
          items:
            type: string
        id:
          type: number
          default: 1
        version:
          type: number
          default: 1
      required:
        - chatType
        - email
        - webhook
        - apiToken
        - roomId
        - mentions
        - id
        - version
    DirectReceptionistInit:
      type: object
      properties:
        id:
          type: number
          default: 1
        groupName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        extensionNumber:
          type: string
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        directReceptionistChatSetting:
          type: array
          items:
            $ref: '#/components/schemas/DirectReceptionistChatSettingInit'
        version:
          type: number
          default: 1
      required:
        - id
        - groupName
        - name
        - callType
        - extensionNumber
        - facetimeAddress
        - directReceptionistChatSetting
        - version
    VisitedAppointmentsInit:
      type: object
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        title:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        version:
          type: number
          default: 1
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentUserInit'
        receptionNumber:
          type: number
          minimum: 1
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentVisitorInit'
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        appointmentSelectedReceptionists:
          $ref: '#/components/schemas/AppointmentSelectedReceptionists'
        directReceptionist:
          $ref: '#/components/schemas/DirectReceptionistInit'
      required:
        - startDate
        - endDate
        - title
        - roomName
        - note
        - version
        - appointmentUsers
        - receptionNumber
        - appointmentVisitors
        - notificationType
        - appointmentSelectedReceptionists
        - directReceptionist
    VisitedAppointmentsInitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VisitedAppointmentsInit'
      required:
        - data
    VisitorsAppointment:
      type: object
      properties:
        id:
          type: number
          minimum: 1
          nullable: true
        visitorEmail:
          type: string
          nullable: true
        visitorName:
          type: string
          nullable: true
        visitorCompanyName:
          type: string
          nullable: true
      required:
        - id
        - visitorEmail
        - visitorName
        - visitorCompanyName
    UsersAppointment:
      type: object
      properties:
        id:
          type: number
          minimum: 1
          nullable: true
        userName:
          type: string
          nullable: true
        userEmail:
          type: string
          nullable: true
      required:
        - id
        - userName
        - userEmail
    VisitedAppointments:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        receptionNumber:
          type: number
          minimum: 1
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        title:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        visitorList:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/VisitorsAppointment'
        userList:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/UsersAppointment'
      required:
        - id
        - receptionNumber
        - startDate
        - endDate
        - title
        - roomName
        - note
        - visitorList
        - userList
    IVisitedAppointmentsResponse:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
          default: startDate
          enum: *ref_55
        order:
          type: string
          default: desc
          enum:
            - asc
            - desc
        appointments:
          type: array
          items:
            $ref: '#/components/schemas/VisitedAppointments'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - appointments
    VisitedAppointmentsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IVisitedAppointmentsResponse'
      required:
        - data
    AppointmentsExitTimeRequest:
      type: object
      properties:
        corporationId:
          type: number
          minimum: 1
        token:
          type: string
      required:
        - corporationId
        - token
    AppointmentUser:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        corporationName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        userId:
          type: number
          nullable: true
        email:
          type: string
          nullable: true
      required:
        - id
        - corporationName
        - name
        - userId
        - email
    AppointmentVisitor:
      type: object
      properties:
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
      required:
        - name
        - email
        - companyName
    DirectReceptionistChatSetting:
      type: object
      properties:
        chatType:
          type: string
          enum: *ref_56
        email:
          type: string
          nullable: true
        webhook:
          type: string
          nullable: true
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        mentions:
          nullable: true
          type: array
          items:
            type: string
      required:
        - chatType
        - email
        - webhook
        - apiToken
        - roomId
        - mentions
    DirectReceptionist:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        extensionNumber:
          type: string
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        directReceptionistChatSetting:
          type: array
          items:
            $ref: '#/components/schemas/DirectReceptionistChatSetting'
      required:
        - groupName
        - name
        - callType
        - extensionNumber
        - facetimeAddress
        - directReceptionistChatSetting
    VisitedAppointmentsDetail:
      type: object
      properties:
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        title:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentUser'
        receptionNumber:
          type: number
          minimum: 1
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentVisitor'
        notificationType:
          type: string
        groupUserName:
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
        directReceptionist:
          $ref: '#/components/schemas/DirectReceptionist'
      required:
        - startDate
        - endDate
        - title
        - roomName
        - note
        - appointmentUsers
        - receptionNumber
        - appointmentVisitors
        - notificationType
        - groupUserName
        - groupName
        - directReceptionist
    VisitedAppointmentsDetailResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VisitedAppointmentsDetail'
      required:
        - data
    AppointmentUsersInfo:
      type: object
      properties:
        id:
          type: number
          nullable: true
          minimum: 1
        userId:
          type: number
          nullable: true
          minimum: 1
        name:
          type: string
        version:
          type: number
          minimum: 1
          nullable: true
      required:
        - name
    AppointmentVisitorInfo:
      type: object
      properties:
        id:
          type: number
          nullable: true
          minimum: 1
        visitorId:
          type: number
          nullable: true
          minimum: 1
        name:
          type: string
        companyName:
          type: string
          nullable: true
        email:
          type: string
          default: email@example.com
        version:
          type: number
          minimum: 1
          nullable: true
        visitorVersion:
          type: number
          minimum: 1
          nullable: true
      required:
        - name
        - email
    AppointmentsVisitedRequest:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        roomName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentUsersInfo'
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentVisitorInfo'
        note:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - startDateTime
        - endDateTime
        - appointmentUsers
        - appointmentVisitors
        - version
    WebHookUrlAndMentions:
      type: object
      properties:
        webHookUrl:
          type: string
        mentions:
          nullable: true
          type: array
          items:
            type: string
      required:
        - webHookUrl
    ChatWork:
      type: object
      properties:
        apiToken:
          type: string
        roomId:
          type: string
        mentions:
          nullable: true
          type: array
          items:
            type: string
      required:
        - apiToken
        - roomId
    DirectReceptionistSettings:
      type: object
      properties:
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        directReceptionistGroupName:
          type: string
        directReceptionistUserName:
          type: string
        directReceptionistGroupName2:
          type: string
          nullable: true
        directReceptionistUserName2:
          type: string
          nullable: true
        extensionNumber:
          type: string
          nullable: true
          default: '1234567890'
        emails:
          default:
            - fake-01@example.com
          nullable: true
          type: array
          items:
            type: string
        slackWebhooks:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/WebHookUrlAndMentions'
        teamsWebhooks:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/WebHookUrlAndMentions'
        chatworks:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/ChatWork'
        lineworksWebhooks:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/WebHookUrlAndMentions'
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
      required:
        - notificationType
        - directReceptionistGroupName
        - directReceptionistUserName
        - callType
    UpdateAppointmentRequest:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        isDisplayMail:
          type: boolean
          default: true
          nullable: true
        roomName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentUsersInfo'
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentVisitorInfo'
        selectedReceptionistGroupId:
          type: number
          minimum: 1
          nullable: true
        selectedReceptionistGroupUserId:
          type: number
          minimum: 1
          nullable: true
        directReceptionists:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/DirectReceptionistSettings'
        note:
          type: string
          nullable: true
        isSendVisitorMail:
          type: boolean
          default: true
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - startDateTime
        - endDateTime
        - appointmentUsers
        - appointmentVisitors
        - version
    CreateAppointmentUser:
      type: object
      properties:
        userId:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - userId
        - name
    CreateAppointmentVisitor:
      type: object
      properties:
        visitorId:
          type: number
          minimum: 1
          nullable: true
          description: 来訪者履歴から追加した場合のみ、存在確認するために必要
        name:
          type: string
        companyName:
          type: string
        email:
          type: string
          default: fake-01@example.com
      required:
        - name
        - email
    CreateAppointmentRequest:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        isDisplayMail:
          type: boolean
          nullable: true
        roomName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/CreateAppointmentUser'
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/CreateAppointmentVisitor'
        receptionNumber:
          type: number
          minimum: 10000
          nullable: true
        selectedReceptionistGroupId:
          type: number
          minimum: 1
          nullable: true
        selectedReceptionistGroupUserId:
          type: number
          minimum: 1
          nullable: true
        directReceptionists:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/DirectReceptionistSettings'
        note:
          type: string
          nullable: true
      required:
        - contractId
        - startDateTime
        - endDateTime
        - appointmentUsers
        - appointmentVisitors
    CommonIdData:
      type: object
      properties:
        id:
          type: number
          minimum: 1
      required:
        - id
    CommonIdResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CommonIdData'
      required:
        - data
    QrCodeAppointmentsDetail:
      type: object
      properties:
        qrCodeData:
          type: string
      required:
        - qrCodeData
    QrCodeAppointmentsDetailResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/QrCodeAppointmentsDetail'
      required:
        - data
    AppointmentsUserList:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        corporationName:
          type: string
        userId:
          type: number
          nullable: true
        name:
          type: string
        email:
          type: string
          nullable: true
      required:
        - id
        - corporationName
        - userId
        - name
        - email
    VisitorDetailInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        companyName:
          type: string
          nullable: true
        email:
          type: string
      required:
        - id
        - name
        - companyName
        - email
    AppointmentsVisitorInfo:
      type: object
      properties:
        receptionNumber:
          type: number
          minimum: 10000
        visitorDetailInfo:
          type: array
          items:
            $ref: '#/components/schemas/VisitorDetailInfo'
      required:
        - receptionNumber
        - visitorDetailInfo
    ChatTypeInfo:
      type: object
      properties:
        chatType:
          type: string
          enum:
            - EMAIL
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
        email:
          type: string
          nullable: true
        webhook:
          type: string
          nullable: true
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        mentions:
          nullable: true
          type: array
          items:
            type: string
      required:
        - chatType
        - email
        - webhook
        - apiToken
        - roomId
        - mentions
    DirectInputInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        groupUserName:
          type: string
          nullable: true
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        extensionNumber:
          type: string
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        chatTypeInfo:
          type: array
          items:
            $ref: '#/components/schemas/ChatTypeInfo'
        groupName2:
          type: string
          nullable: true
        groupUserName2:
          type: string
          nullable: true
      required:
        - groupName
        - groupUserName
        - notificationType
        - callType
        - extensionNumber
        - facetimeAddress
        - chatTypeInfo
        - groupName2
        - groupUserName2
    ReceptionistSettingInfo:
      type: object
      properties:
        entityType:
          type: string
          enum: &ref_57
            - GROUP
            - GROUP_USER
            - ''
        receptionistName:
          type: string
        directInputInfo:
          $ref: '#/components/schemas/DirectInputInfo'
      required:
        - entityType
        - receptionistName
    IAppointmentDetail:
      type: object
      properties:
        appointmentStartDate:
          format: date-time
          type: string
        appointmentEndDate:
          format: date-time
          type: string
        title:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        appointmentUserList:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentsUserList'
        appointmentVisitorsInfo:
          $ref: '#/components/schemas/AppointmentsVisitorInfo'
        receptionistSettingInfo:
          $ref: '#/components/schemas/ReceptionistSettingInfo'
        note:
          type: string
          nullable: true
      required:
        - appointmentStartDate
        - appointmentEndDate
        - title
        - roomName
        - appointmentUserList
        - appointmentVisitorsInfo
        - receptionistSettingInfo
        - note
    AppointmentDetailResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IAppointmentDetail'
      required:
        - data
    AppointmentsInitUserList:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        corporationName:
          type: string
        name:
          type: string
        userId:
          type: number
          nullable: true
        email:
          type: string
          nullable: true
        version:
          type: number
      required:
        - id
        - corporationName
        - name
        - userId
        - email
        - version
    VisitorInitDetailInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        companyName:
          type: string
          nullable: true
        email:
          type: string
        version:
          type: number
        visitorVersion:
          type: object
      required:
        - id
        - name
        - companyName
        - email
        - version
        - visitorVersion
    AppointmentsVisitorInitInfo:
      type: object
      properties:
        receptionNumber:
          type: number
          minimum: 10000
        visitorDetailInfo:
          type: array
          items:
            $ref: '#/components/schemas/VisitorInitDetailInfo'
      required:
        - receptionNumber
        - visitorDetailInfo
    ReceptionistSettingInfoInit:
      type: object
      properties:
        entityType:
          type: string
          enum: *ref_57
        receptionistName:
          type: string
        directInputInfo:
          $ref: '#/components/schemas/DirectInputInfo'
        selectedReceptionistGroupId:
          type: number
          minimum: 1
          nullable: true
        selectedReceptionistGroupUserId:
          type: number
          minimum: 1
          nullable: true
      required:
        - entityType
        - receptionistName
        - selectedReceptionistGroupId
        - selectedReceptionistGroupUserId
    IAppointmentInitDetail:
      type: object
      properties:
        appointmentStartDate:
          format: date-time
          type: string
        appointmentEndDate:
          format: date-time
          type: string
        title:
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        appointmentUserList:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentsInitUserList'
        appointmentVisitorsInfo:
          $ref: '#/components/schemas/AppointmentsVisitorInitInfo'
        receptionistSettingInfo:
          $ref: '#/components/schemas/ReceptionistSettingInfoInit'
        note:
          type: string
          nullable: true
        version:
          type: number
        timezone:
          type: string
      required:
        - appointmentStartDate
        - appointmentEndDate
        - title
        - roomName
        - appointmentUserList
        - appointmentVisitorsInfo
        - receptionistSettingInfo
        - note
        - version
        - timezone
    AppointmentInitDetailResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IAppointmentInitDetail'
      required:
        - data
    UploadFileRequest:
      type: object
      properties:
        fileExtension:
          type: string
          enum:
            - png
            - jpg
            - jpeg
            - mp4
        contractId:
          type: number
          minimum: 1
        groupDisplayId:
          type: number
          minimum: 1
          nullable: true
        phoneBookId:
          type: number
          minimum: 1
          nullable: true
      required:
        - fileExtension
        - contractId
    UploadFileData:
      type: object
      properties:
        uploadUrl:
          type: string
        fileName:
          type: string
      required:
        - uploadUrl
        - fileName
    UploadFileResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UploadFileData'
      required:
        - data
    CreateAppSettingUpdateDateTime:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        updateDateTime:
          type: string
          format: date-time
      required:
        - contractId
        - updateDateTime
    updateCallSetting:
      type: object
      properties:
        deviceId:
          type: number
          minimum: 1
        callLibrary:
          type: number
          description: 通話ライブラリ（0:ienterライブラリ1、1:ienterライブラリ2）
        name:
          type: string
          description: 名前
        password:
          type: string
          description: パスワード
        phoneNumber:
          type: string
          description: 電話番号
        serverAddress:
          type: string
          description: サーバーアドレス
        serverPort:
          type: number
          description: サーバーポート
        clientPort:
          type: number
          description: クライアントポート
        displayName:
          type: string
          description: 表示名
        callDisconnectTime:
          type: number
          description: 通話切断時間
        audioSessionMode:
          type: number
          description: オーディオセッションモード（0:default、1:voiveChat）
        audioUnitSubType:
          type: number
          description: オーディオユニットサブタイプ（0:RemoteIO、VoiceProcessingIO）
        samplingRate:
          type: number
          description: サンプリングレート（0:44.1kHz、1:48.0kHz）
        buffer:
          type: number
          description: バッファ
          minimum: 1
        switchBoardGain:
          type: number
          description: スイッチボードゲイン
          minimum: 100
      required:
        - deviceId
        - callLibrary
        - displayName
        - audioSessionMode
        - audioUnitSubType
        - samplingRate
        - buffer
        - switchBoardGain
    UpdateAppSettingsReq:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
          description: 契約ID
        appSettingId:
          type: number
          minimum: 1
          description: アプリ設定ID
        phoneBookId:
          type: object
          minimum: 1
          description: 電話帳ID
        version:
          type: number
          minimum: 1
          description: バージョン
        logoType:
          type: number
          description: ロゴ種別(0:デフォルト,1:画像設定)
        isDisplayLogo:
          type: boolean
          description: ロゴ表示フラグ
        logoImage:
          type: string
          description: ロゴ画像URL(画像設定)
        isDisplayRequirement:
          type: boolean
          description: 要件フィールドの表示設定
        isRequiredCompanyName:
          type: boolean
          description: 来訪者情報入力画面の会社名欄の入力必須/任意
        isRequiredName:
          type: boolean
          description: 来訪者情報入力画面の氏名欄の入力必須/任意
        isRequiredRequirement:
          type: boolean
          description: 来訪者情報入力画面の用件欄の入力必須/任意
        isDisplayTopGroupName:
          type: boolean
          description: 最上位部署表示/非表示
        isDisplayGroupName:
          type: boolean
          description: 最下位部署表示/非表示
        isDisplayCompleteReception:
          type: boolean
          description: 受付完了画面表示/非表示
        isPhoneBookEnabled:
          type: boolean
          description: 内線番号表示モード設定(オフの場合は通常の通話を行う)
        standbyImageType:
          type: number
          description: 待ち受け画像タイプ（0:デフォルト、1:カスタム）
        defaultStandbyImageType:
          type: number
          description: 壁紙番号(デフォルト)
        customStandbyImages:
          description: カスタム壁紙画像URL
          type: array
          items:
            type: string
        customStandbyMovie:
          type: string
          description: カスタム壁紙動画URL
        standbyImageSwitchInterval:
          type: number
          description: 壁紙スライド間隔
        returnBackgroundTime:
          type: number
          description: 待ち受け画面に戻る時間(秒)
        firstMessageText:
          type: string
          description: 待ち受けメッセージ（1段目）
        secondMessageText:
          type: string
          description: 待ち受けメッセージ（2段目）
        thirdMessageText:
          type: string
          description: 待ち受けメッセージ（3段目）
        appTheme:
          type: number
          description: テーマ切り替え（0:ライト、1:ダーク）
        standByTextColor:
          type: number
          description: テキストカラー（0:ブラック、1:ホワイト）
        animationType:
          type: number
          description: アニメーションタイプ（0:点滅、1:スクロール）
        flashTime:
          type: number
          description: フラッシュ時間
        scrollTime:
          type: number
          description: スクロール時間
        firstMessageScrollEnable:
          type: boolean
          description: メッセージスクロール有効化
        secondMessageScrollEnable:
          type: boolean
          description: メッセージスクロール有効化
        thirdMessageScrollEnable:
          type: boolean
          description: メッセージスクロール有効化
        isDisplayFingerIcon:
          type: boolean
          description: 指アイコン
        buttonOrder:
          description: ボタン順序
          default:
            - GROUP
            - USER
            - RECRUIT
            - OTHER
            - DELIVERY
            - SECRETARY
            - TAXI
            - QR
            - RECEPTION_CODE
            - FACE_RECOGNITION
          type: array
          items:
            type: string
        isDisplayMenu:
          type: boolean
          description: ボタン1つのときのメニュー表示
        isDisplayVisitorInfoGroup:
          type: boolean
          description: 部署
        isDisplayVisitorInfoUser:
          type: boolean
          description: 担当
        isDisplayVisitorInfoRecruit:
          type: boolean
          description: 面接
        isDisplayVisitorInfoOther:
          type: boolean
          description: その他
        isDisplayVisitorInfoSecretary:
          type: boolean
          description: 秘書
        deliveryTransitionType:
          type: number
          description: 配送遷移タイプ（0:設定なし,1:宅配マップ,2:宅配業者一覧）
          default: 0
        deliveryMapImagePath:
          type: string
          description: 宅配マップ画像パス
        isDisplayInputExtensionNumber:
          type: boolean
          description: 内線番号直接入力表示(その他ご用の方)
        recruitNotificationType:
          type: string
          description: 面接通知タイプ
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        recruitExtensionNumber:
          type: string
          description: 面接内線番号
        recruitCallType:
          type: string
          description: 面接通話タイプ
          enum:
            - PHONE
            - FACETIME
        recruitFacetimeAddress:
          type: string
        deliveryNotificationType:
          type: string
          description: 宅配通知タイプ
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        deliveryExtensionNumber:
          type: string
          description: 宅配内線番号
        deliveryCallType:
          type: string
          description: 宅配通話タイプ
          enum:
            - PHONE
            - FACETIME
        deliveryFacetimeAddress:
          type: string
        otherNotificationType:
          type: string
          description: その他通知タイプ
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        otherExtensionNumber:
          type: string
          description: その他内線番号
        otherCallType:
          type: string
          description: その他通話タイプ
          enum:
            - PHONE
            - FACETIME
        otherFacetimeAddress:
          type: string
        taxiNotificationType:
          type: string
          description: タクシー通知タイプ
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        taxiExtensionNumber:
          type: string
          description: タクシー内線番号
        taxiCallType:
          type: string
          description: タクシー通話タイプ
          enum:
            - PHONE
            - FACETIME
        taxiFacetimeAddress:
          type: string
        secretaryNotificationType:
          type: string
          description: 秘書通知タイプ
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        secretaryExtensionNumber:
          type: string
          description: 秘書内線番号
        secretaryCallType:
          type: string
          description: 秘書通話タイプ
          enum:
            - PHONE
            - FACETIME
        secretaryFacetimeAddress:
          type: string
        isRedMenuHeaderTitle:
          type: boolean
          description: メニューヘッダ文言（1段目）の赤文字化
        isRedMenuHeaderSubTitle:
          type: boolean
          description: メニューヘッダ文言（2段目）の赤文字化
        callConnectingMessage:
          type: string
          description: 電話をかける案内メッセージ
        callingMessage:
          type: string
          description: 電話を切る案内メッセージ
        companyListHeaderTitle:
          type: string
          description: 会社一覧画面ヘッダータイトル
        companyNamePlaceHolderMessage:
          type: string
          description: 会社名 入力例
        companyNameTitle:
          type: string
          description: 会社名
        deliveryMapMessage:
          type: string
          description: 宅配マップ案内メッセージ
        deliveryReceptionCompleteMessage:
          type: string
          description: 宅配業者受付完了案内メッセージ
        deliveryButtonTitle:
          type: string
          description: 宅配の方ボタン
        groupButtonTitle:
          type: string
          description: 部署名から選ぶボタン
        groupHeaderTitle:
          type: string
          description: 部署一覧案内メッセージ
        userButtonTitle:
          type: string
          description: 担当名から選ぶボタン
        userHeaderTitle:
          type: string
          description: 担当名検索案内メッセージ
        faceRecognitionButtonTitle:
          type: string
          description: 顔認証ボタン
        fifthDeliveryTitle:
          type: string
          description: 西濃運輸ボタン
        firstDeliveryTitle:
          type: string
          description: 佐川急便ボタン
        fourthDeliveryTitle:
          type: string
          description: 郵便事業ボタン
        menuHeaderSubTitle:
          type: string
          description: メニューヘッダ2行目
        menuHeaderTitle:
          type: string
          description: メニューヘッダ1行目
        namePlaceHolderMessage:
          type: string
          description: 氏名 入力例
        nameTitle:
          type: string
          description: 氏名タイトル
        notificationCompleteMessage:
          type: string
          description: チャット受付完了案内メッセージ
        otherButtonTitle:
          type: string
          description: その他ご用の方ボタン
        otherDeliveryTitle:
          type: string
          description: その他（宅配業者）ボタン
        qrCodeButtonTitle:
          type: string
          description: QRコードをお持ちの方ボタン
        receptionCompleteMessage:
          type: string
          description: 受付完了案内メッセージ
        receptionFailedMessage:
          type: string
          description: 受付失敗案内メッセージ
        receptionNumberButtonTitle:
          type: string
          description: 受付番号をお持ちの方ボタン
        recruitButtonTitle:
          type: string
          description: 面接の方ボタン
        requirementPlaceHolderMessage:
          type: string
          description: 用件 入力例
        requirementTitle:
          type: string
          description: 用件名
        schoolNameTitle:
          type: string
          description: 学校名タイトル
        searchUserPlaceHolderMessage:
          type: string
          description: 入力例
        secondDeliveryTitle:
          type: string
          description: ヤマト運輸ボタン
        secretaryButtonTitle:
          type: string
          description: 秘書にご用の方ボタン
        sixthDeliveryTitle:
          type: string
          description: 福山通運ボタン
        taxiButtonTitle:
          type: string
          description: 迎車の方ボタン
        thirdDeliveryTitle:
          type: string
          description: 日本通運ボタン
        callConnectingMessageSecondLanguage:
          type: string
          description: 電話をかける案内メッセージ(第二言語)
        callingMessageSecondLanguage:
          type: string
          description: 電話を切る案内メッセージ(第二言語)
        companyListHeaderTitleSecondLanguage:
          type: string
          description: 会社一覧画面ヘッダータイトル(第二言語)
        companyNamePlaceHolderMessageSecondLanguage:
          type: string
          description: 会社名 入力例(第二言語)
        companyNameTitleSecondLanguage:
          type: string
          description: 会社名(第二言語)
        deliveryMapMessageSecondLanguage:
          type: string
          description: 宅配マップ案内メッセージ(第二言語)
        deliveryReceptionCompleteMessageSecondLanguage:
          type: string
          description: 宅配業者受付完了案内メッセージ(第二言語)
        deliveryButtonTitleSecondLanguage:
          type: string
          description: 宅配の方ボタン(第二言語)
        groupButtonTitleSecondLanguage:
          type: string
          description: 部署名から選ぶボタン(第二言語)
        groupHeaderTitleSecondLanguage:
          type: string
          description: 部署一覧案内メッセージ(第二言語)
        userButtonTitleSecondLanguage:
          type: string
          description: 担当名から選ぶボタン(第二言語)
        userHeaderTitleSecondLanguage:
          type: string
          description: 担当名検索案内メッセージ(第二言語)
        faceRecognitionButtonTitleSecondLanguage:
          type: string
          description: 顔認証ボタン(第二言語)
        fifthDeliveryTitleSecondLanguage:
          type: string
          description: 西濃運輸ボタン(第二言語)
        firstDeliveryTitleSecondLanguage:
          type: string
          description: 佐川急便ボタン(第二言語)
        fourthDeliveryTitleSecondLanguage:
          type: string
          description: 郵便事業ボタン(第二言語)
        menuHeaderSubTitleSecondLanguage:
          type: string
          description: メニューヘッダ2行目(第二言語)
        menuHeaderTitleSecondLanguage:
          type: string
          description: メニューヘッダ1行目(第二言語)
        namePlaceHolderMessageSecondLanguage:
          type: string
          description: 氏名 入力例(第二言語)
        nameTitleSecondLanguage:
          type: string
          description: 氏名タイトル(第二言語)
        notificationCompleteMessageSecondLanguage:
          type: string
          description: チャット受付完了案内メッセージ(第二言語)
        otherButtonTitleSecondLanguage:
          type: string
          description: その他ご用の方ボタン(第二言語)
        otherDeliveryTitleSecondLanguage:
          type: string
          description: その他（宅配業者）ボタン(第二言語)
        qrCodeButtonTitleSecondLanguage:
          type: string
          description: QRコードをお持ちの方ボタン(第二言語)
        receptionCompleteMessageSecondLanguage:
          type: string
          description: 受付完了案内メッセージ(第二言語)
        receptionFailedMessageSecondLanguage:
          type: string
          description: 受付失敗案内メッセージ(第二言語)
        receptionNumberButtonTitleSecondLanguage:
          type: string
          description: 受付番号をお持ちの方ボタン(第二言語)
        recruitButtonTitleSecondLanguage:
          type: string
          description: 面接の方ボタン(第二言語)
        requirementPlaceHolderMessageSecondLanguage:
          type: string
          description: 用件 入力例(第二言語)
        requirementTitleSecondLanguage:
          type: string
          description: 用件名(第二言語)
        schoolNameTitleSecondLanguage:
          type: string
          description: 学校名タイトル(第二言語)
        searchUserPlaceHolderMessageSecondLanguage:
          type: string
          description: 入力例(第二言語)
        secondDeliveryTitleSecondLanguage:
          type: string
          description: ヤマト運輸ボタン(第二言語)
        secretaryButtonTitleSecondLanguage:
          type: string
          description: 秘書にご用の方ボタン(第二言語)
        sixthDeliveryTitleSecondLanguage:
          type: string
          description: 福山通運ボタン(第二言語)
        taxiButtonTitleSecondLanguage:
          type: string
          description: 迎車の方ボタン(第二言語)
        thirdDeliveryTitleSecondLanguage:
          type: string
          description: 日本通運ボタン(第二言語)
        settingLanguageCode:
          type: string
          description: 設定言語コード
          enum:
            - ja
            - en
            - vi
        isDisplayLanguageButton:
          type: boolean
          description: 言語ボタン表示
        receptionLanguageCode:
          type: string
          description: 受付言語コード
          enum:
            - ja
            - en
            - vi
        enableAutoSleep:
          type: boolean
          description: 自動スリープ有効化
        openingHours:
          type: string
          description: 開店時間
          default: '8:00'
        closingHours:
          type: string
          description: 閉店時間
          default: '18:00'
        callSettings:
          type: array
          items:
            $ref: '#/components/schemas/updateCallSetting'
      required:
        - contractId
        - appSettingId
        - version
        - logoType
        - isDisplayLogo
        - isDisplayRequirement
        - isRequiredCompanyName
        - isRequiredName
        - isRequiredRequirement
        - isDisplayTopGroupName
        - isDisplayGroupName
        - isDisplayCompleteReception
        - isPhoneBookEnabled
        - standbyImageType
        - returnBackgroundTime
        - appTheme
        - standByTextColor
        - animationType
        - isDisplayFingerIcon
        - buttonOrder
        - isDisplayMenu
        - isDisplayVisitorInfoGroup
        - isDisplayVisitorInfoUser
        - isDisplayVisitorInfoRecruit
        - isDisplayVisitorInfoOther
        - isDisplayVisitorInfoSecretary
        - deliveryTransitionType
        - isDisplayInputExtensionNumber
        - recruitNotificationType
        - deliveryNotificationType
        - otherNotificationType
        - taxiNotificationType
        - secretaryNotificationType
        - isRedMenuHeaderTitle
        - isRedMenuHeaderSubTitle
        - settingLanguageCode
        - isDisplayLanguageButton
        - receptionLanguageCode
        - enableAutoSleep
        - openingHours
        - closingHours
        - callSettings
    UpdateAppSettingCompnanySelectRequest:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        phoneBookId:
          type: number
          minimum: 1
        appSettingId:
          type: number
          minimum: 1
          description: 更新の場合、必須
        version:
          type: number
          minimum: 1
          description: logotype以下の項目は全社共通と値が同じ場合はリクエストされない
        logoType:
          type: number
          description: ロゴ種別(0:デフォルト,1:画像設定)
        isDisplayLogo:
          type: boolean
          description: ロゴ表示フラグ
        logoImage:
          type: string
          description: ロゴ画像URL(画像設定)
        isDisplayRequirement:
          type: boolean
          description: 要件フィールドの表示設定
        isRequiredCompanyName:
          type: boolean
          description: 要件フィールド社名
        isRequiredName:
          type: boolean
          description: 要件フィールド氏名
        isRequiredRequirement:
          type: boolean
          description: 要件フィールド要件名
        isDisplayTopGroupName:
          type: boolean
          description: 最上位部署表示設定
        isDisplayGroupName:
          type: boolean
          description: 下位部署表示設定
        isDisplayCompleteReception:
          type: boolean
          description: 受付完了画面表示
        isPhoneBookEnabled:
          type: boolean
          description: 電話帳モード
        buttonOrder:
          type: number
          enum:
            - - GROUP
              - USER
              - RECRUIT
              - OTHER
              - DELIVERY
              - SECRETARY
              - TAXI
              - QR
              - RECEPTION_CODE
              - FACE_RECOGNITION
          description: メニューボタン並び順<br>順番を含めて一致している場合はundefined
        isDisplayMenu:
          type: boolean
          description: ボタン1つのときのメニュー表示
        isDisplayVisitorInfoGroup:
          type: boolean
          description: 部署ボタン来訪者情報
        isDisplayVisitorInfoUser:
          type: boolean
          description: 担当ボタン来訪者情報
        isDisplayVisitorInfoRecruit:
          type: boolean
          description: 面接ボタン来訪者情報
        isDisplayVisitorInfoOther:
          type: boolean
          description: その他ボタン来訪者情報
        isDisplayVisitorInfoSecretary:
          type: boolean
          description: 秘書ボタン来訪者情報
        deliveryTransitionType:
          type: number
          description: 配送遷移タイプ（0:設定なし,1:宅配マップ,2:宅配業者一覧）
          default: 0
        deliveryMapImagePath:
          type: string
          description: 宅配マップ画像
        isDisplayInputExtensionNumber:
          type: boolean
          description: 内線番号直接入力表示(その他ご用の方)
        recruitNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
          description: 通知種別（面接）
        recruitCallType:
          type: string
          description: 通話タイプ（面接）
          enum:
            - PHONE
            - FACETIME
          default: PHONE
        recruitExtensionNumber:
          type: string
          description: 内線番号（面接）
        recruitFacetimeAddress:
          type: string
        deliveryNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
          description: 通知種別（宅配）
        deliveryCallType:
          type: string
          description: 通話タイプ（宅配）
          enum:
            - PHONE
            - FACETIME
          default: PHONE
        deliveryExtensionNumber:
          type: string
          description: 内線番号（宅配）
        deliveryFacetimeAddress:
          type: string
        otherNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
          description: 通知種別（その他）
        otherCallType:
          type: string
          description: 通話タイプ（その他）
          enum:
            - PHONE
            - FACETIME
          default: PHONE
        otherExtensionNumber:
          type: string
          description: 内線番号（その他）
        otherFacetimeAddress:
          type: string
        taxiNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
          description: 通知種別（迎車）
        taxiCallType:
          type: string
          description: 通話タイプ（迎車）
          enum:
            - PHONE
            - FACETIME
          default: PHONE
        taxiExtensionNumber:
          type: string
          description: 内線番号（迎車）
        taxiFacetimeAddress:
          type: string
        secretaryNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
          description: 通知種別（秘書）
        secretaryCallType:
          type: string
          description: 通話タイプ（秘書）
          enum:
            - PHONE
            - FACETIME
          default: PHONE
        secretaryExtensionNumber:
          type: string
          description: 内線番号（面接）秘書
        secretaryFacetimeAddress:
          type: string
        isRedMenuHeaderTitle:
          type: boolean
          description: メニューヘッダ文言(1段目)の赤文字化
        isRedMenuHeaderSubTitle:
          type: boolean
          description: メニューヘッダ文言(2段目)の赤文字化
        deliveryButtonTitle:
          type: string
          description: 宅配の方ボタンタイトル
        groupButtonTitle:
          type: string
          description: 部署名から選ぶボタンタイトル
        userButtonTitle:
          type: string
          description: 担当名から選ぶボタンタイトル
        faceRecognitionButtonTitle:
          type: string
          description: 顔認証ボタンタイトル
        fifthDeliveryTitle:
          type: string
          description: 西濃運輸ボタン
        firstDeliveryTitle:
          type: string
          description: 佐川急便ボタン
        fourthDeliveryTitle:
          type: string
          description: 郵便事業ボタン
        menuHeaderSubTitle:
          type: string
          description: メニューヘッダ2行目
        menuHeaderTitle:
          type: string
          description: メニューヘッダ1行目
        otherButtonTitle:
          type: string
          description: その他ご用の方ボタンタイトル
        otherDeliveryTitle:
          type: string
          description: その他（宅配業者）ボタンタイトル
        qrCodeButtonTitle:
          type: string
          description: QRコードをお持ちの方ボタンタイトル
        receptionNumberButtonTitle:
          type: string
          description: 受付番号をお持ちの方ボタンタイトル
        recruitButtonTitle:
          type: string
          description: 面接の方ボタンタイトル
        secondDeliveryTitle:
          type: string
          description: ヤマト運輸ボタンタイトル
        secretaryButtonTitle:
          type: string
          description: 秘書にご用の方ボタンタイトル
        sixthDeliveryTitle:
          type: string
          description: 福山通運ボタンタイトル
        taxiButtonTitle:
          type: string
          description: 迎車の方ボタンタイトル
        thirdDeliveryTitle:
          type: string
          description: 日本通運ボタンタイトル
        deliveryButtonTitleSecondLanguage:
          type: string
          description: 宅配の方ボタンタイトル(第二言語)
        groupButtonTitleSecondLanguage:
          type: string
          description: 部署名から選ぶボタンタイトル(第二言語)
        userButtonTitleSecondLanguage:
          type: string
          description: 担当名から選ぶボタンタイトル(第二言語)
        faceRecognitionButtonTitleSecondLanguage:
          type: string
          description: 顔認証ボタンタイトル(第二言語)
        fifthDeliveryTitleSecondLanguage:
          type: string
          description: 西濃運輸ボタンタイトル(第二言語)
        firstDeliveryTitleSecondLanguage:
          type: string
          description: 佐川急便ボタンタイトル(第二言語)
        fourthDeliveryTitleSecondLanguage:
          type: string
          description: 郵便事業ボタンタイトル(第二言語)
        menuHeaderSubTitleSecondLanguage:
          type: string
          description: メニューヘッダ2行目(第二言語)
        menuHeaderTitleSecondLanguage:
          type: string
          description: メニューヘッダ1行目(第二言語)
        otherButtonTitleSecondLanguage:
          type: string
          description: その他ご用の方ボタンタイトル(第二言語)
        otherDeliveryTitleSecondLanguage:
          type: string
          description: その他（宅配業者）ボタンタイトル(第二言語)
        qrCodeButtonTitleSecondLanguage:
          type: string
          description: QRコードをお持ちの方ボタンタイトル(第二言語)
        receptionNumberButtonTitleSecondLanguage:
          type: string
          description: 受付番号をお持ちの方ボタンタイトル(第二言語)
        recruitButtonTitleSecondLanguage:
          type: string
          description: 面接の方ボタンタイトル(第二言語)
        secondDeliveryTitleSecondLanguage:
          type: string
          description: ヤマト運輸ボタンタイトル(第二言語)
        secretaryButtonTitleSecondLanguage:
          type: string
          description: 秘書にご用の方ボタンタイトル(第二言語)
        sixthDeliveryTitleSecondLanguage:
          type: string
          description: 福山通運ボタンタイトル(第二言語)
        taxiButtonTitleSecondLanguage:
          type: string
          description: 迎車の方ボタンタイトル(第二言語)
        thirdDeliveryTitleSecondLanguage:
          type: string
          description: 日本通運ボタンタイトル(第二言語)
      required:
        - contractId
        - phoneBookId
    AppSettingGroupDisplay:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    CallSetting:
      type: object
      properties: {}
    AppSettingCompanyCommonData:
      type: object
      properties:
        logoType:
          type: number
        isDisplayLogo:
          type: boolean
        logoImage:
          type: string
        isDisplayRequirement:
          type: boolean
        isRequiredCompanyName:
          type: boolean
        isRequiredName:
          type: boolean
        isRequiredRequirement:
          type: boolean
        isDisplayTopGroupName:
          type: boolean
        isDisplayGroupName:
          type: boolean
        isDisplayCompleteReception:
          type: boolean
        isPhoneBookEnabled:
          type: boolean
        standbyImageType:
          type: number
        defaultStandbyImageType:
          type: number
        customStandbyImages:
          type: array
          items:
            type: string
        customStandbyMovie:
          type: string
        standbyImageSwitchInterval:
          type: number
        returnBackgroundTime:
          type: number
        firstMessageText:
          type: string
        secondMessageText:
          type: string
        thirdMessageText:
          type: string
        appTheme:
          type: number
        standByTextColor:
          type: number
        animationType:
          type: number
        flashTime:
          type: number
        scrollTime:
          type: number
        firstMessageScrollEnable:
          type: boolean
        secondMessageScrollEnable:
          type: boolean
        thirdMessageScrollEnable:
          type: boolean
        isDisplayFingerIcon:
          type: boolean
        buttonOrder:
          type: array
          items:
            type: string
            enum:
              - GROUP
              - USER
              - RECRUIT
              - OTHER
              - DELIVERY
              - SECRETARY
              - TAXI
              - QR
              - RECEPTION_CODE
              - FACE_RECOGNITION
        isDisplayMenu:
          type: boolean
        isDisplayVisitorInfoGroup:
          type: boolean
        isDisplayVisitorInfoUser:
          type: boolean
        isDisplayVisitorInfoRecruit:
          type: boolean
        isDisplayVisitorInfoOther:
          type: boolean
        isDisplayVisitorInfoSecretary:
          type: boolean
        deliveryTransitionType:
          type: number
        deliveryMapImagePath:
          type: string
        isDisplayInputExtensionNumber:
          type: boolean
        recruitNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        recruitExtensionNumber:
          type: string
        recruitCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        recruitFacetimeAddress:
          type: string
        deliveryNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        deliveryExtensionNumber:
          type: string
        deliveryCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        deliveryFacetimeAddress:
          type: string
        otherNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        otherExtensionNumber:
          type: string
        otherCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        otherFacetimeAddress:
          type: string
        taxiNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        taxiExtensionNumber:
          type: string
        taxiCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        taxiFacetimeAddress:
          type: string
        secretaryNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        secretaryExtensionNumber:
          type: string
        secretaryCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        secretaryFacetimeAddress:
          type: string
        isRedMenuHeaderTitle:
          type: boolean
        isRedMenuHeaderSubTitle:
          type: boolean
        callConnectingMessage:
          type: string
        callingMessage:
          type: string
        companyListHeaderTitle:
          type: string
        companyNamePlaceHolderMessage:
          type: string
        companyNameTitle:
          type: string
        deliveryMapMessage:
          type: string
        deliveryReceptionCompleteMessage:
          type: string
        deliveryButtonTitle:
          type: string
        groupButtonTitle:
          type: string
        groupHeaderTitle:
          type: string
        userButtonTitle:
          type: string
        userHeaderTitle:
          type: string
        faceRecognitionButtonTitle:
          type: string
        fifthDeliveryTitle:
          type: string
        firstDeliveryTitle:
          type: string
        fourthDeliveryTitle:
          type: string
        menuHeaderTitle:
          type: string
        menuHeaderSubTitle:
          type: string
        namePlaceHolderMessage:
          type: string
        nameTitle:
          type: string
        notificationCompleteMessage:
          type: string
        otherButtonTitle:
          type: string
        otherDeliveryTitle:
          type: string
        qrCodeButtonTitle:
          type: string
        receptionCompleteMessage:
          type: string
        receptionFailedMessage:
          type: string
        receptionNumberButtonTitle:
          type: string
        recruitButtonTitle:
          type: string
        requirementPlaceHolderMessage:
          type: string
        requirementTitle:
          type: string
        schoolNameTitle:
          type: string
        searchUserPlaceHolderMessage:
          type: string
        secondDeliveryTitle:
          type: string
        secretaryButtonTitle:
          type: string
        sixthDeliveryTitle:
          type: string
        taxiButtonTitle:
          type: string
        thirdDeliveryTitle:
          type: string
        callConnectingMessageSecondLanguage:
          type: string
        callingMessageSecondLanguage:
          type: string
        companyListHeaderTitleSecondLanguage:
          type: string
        companyNamePlaceHolderMessageSecondLanguage:
          type: string
        companyNameTitleSecondLanguage:
          type: string
        deliveryMapMessageSecondLanguage:
          type: string
        deliveryReceptionCompleteMessageSecondLanguage:
          type: string
        deliveryButtonTitleSecondLanguage:
          type: string
        groupButtonTitleSecondLanguage:
          type: string
        groupHeaderTitleSecondLanguage:
          type: string
        userButtonTitleSecondLanguage:
          type: string
        userHeaderTitleSecondLanguage:
          type: string
        faceRecognitionButtonTitleSecondLanguage:
          type: string
        fifthDeliveryTitleSecondLanguage:
          type: string
        firstDeliveryTitleSecondLanguage:
          type: string
        fourthDeliveryTitleSecondLanguage:
          type: string
        menuHeaderTitleSecondLanguage:
          type: string
        menuHeaderSubTitleSecondLanguage:
          type: string
        namePlaceHolderMessageSecondLanguage:
          type: string
        nameTitleSecondLanguage:
          type: string
        notificationCompleteMessageSecondLanguage:
          type: string
        otherButtonTitleSecondLanguage:
          type: string
        otherDeliveryTitleSecondLanguage:
          type: string
        qrCodeButtonTitleSecondLanguage:
          type: string
        receptionCompleteMessageSecondLanguage:
          type: string
        receptionFailedMessageSecondLanguage:
          type: string
        receptionNumberButtonTitleSecondLanguage:
          type: string
        recruitButtonTitleSecondLanguage:
          type: string
        requirementPlaceHolderMessageSecondLanguage:
          type: string
        requirementTitleSecondLanguage:
          type: string
        schoolNameTitleSecondLanguage:
          type: string
        searchUserPlaceHolderMessageSecondLanguage:
          type: string
        secondDeliveryTitleSecondLanguage:
          type: string
        secretaryButtonTitleSecondLanguage:
          type: string
        sixthDeliveryTitleSecondLanguage:
          type: string
        taxiButtonTitleSecondLanguage:
          type: string
        thirdDeliveryTitleSecondLanguage:
          type: string
        settingLanguageCode:
          type: string
          enum:
            - ja
            - en
            - vi
        isDisplayLanguageButton:
          type: boolean
        receptionLanguageCode:
          type: string
          enum:
            - ja
            - en
            - vi
        enableAutoSleep:
          type: boolean
        openingHours:
          type: string
        closingHours:
          type: string
        callSettings:
          type: array
          items:
            $ref: '#/components/schemas/CallSetting'
        logoImageUrl:
          type: string
        customStandbyImageUrls:
          type: array
          items:
            type: string
        customStandbyMovieUrl:
          type: string
        deliveryMapImageUrl:
          type: string
      required:
        - logoType
        - isDisplayLogo
        - isDisplayRequirement
        - isRequiredCompanyName
        - isRequiredName
        - isRequiredRequirement
        - isDisplayTopGroupName
        - isDisplayGroupName
        - isDisplayCompleteReception
        - isPhoneBookEnabled
        - standbyImageType
        - returnBackgroundTime
        - appTheme
        - standByTextColor
        - animationType
        - isDisplayFingerIcon
        - buttonOrder
        - isDisplayMenu
        - isDisplayVisitorInfoGroup
        - isDisplayVisitorInfoUser
        - isDisplayVisitorInfoRecruit
        - isDisplayVisitorInfoOther
        - isDisplayVisitorInfoSecretary
        - deliveryTransitionType
        - isDisplayInputExtensionNumber
        - recruitNotificationType
        - recruitCallType
        - deliveryNotificationType
        - deliveryCallType
        - otherNotificationType
        - otherCallType
        - taxiNotificationType
        - taxiCallType
        - secretaryNotificationType
        - secretaryCallType
        - isRedMenuHeaderTitle
        - isRedMenuHeaderSubTitle
        - settingLanguageCode
        - isDisplayLanguageButton
        - receptionLanguageCode
        - enableAutoSleep
        - openingHours
        - closingHours
        - callSettings
    AppSettingCompanyData:
      type: object
      properties:
        logoType:
          type: number
        isDisplayLogo:
          type: boolean
        logoImage:
          type: string
        isDisplayRequirement:
          type: boolean
        isRequiredCompanyName:
          type: boolean
        isRequiredName:
          type: boolean
        isRequiredRequirement:
          type: boolean
        isDisplayTopGroupName:
          type: boolean
        isDisplayGroupName:
          type: boolean
        isDisplayCompleteReception:
          type: boolean
        isPhoneBookEnabled:
          type: boolean
        buttonOrder:
          type: array
          items:
            type: string
            enum:
              - GROUP
              - USER
              - RECRUIT
              - OTHER
              - DELIVERY
              - SECRETARY
              - TAXI
              - QR
              - RECEPTION_CODE
              - FACE_RECOGNITION
        isDisplayMenu:
          type: boolean
        isDisplayVisitorInfoGroup:
          type: boolean
        isDisplayVisitorInfoUser:
          type: boolean
        isDisplayVisitorInfoRecruit:
          type: boolean
        isDisplayVisitorInfoOther:
          type: boolean
        isDisplayVisitorInfoSecretary:
          type: boolean
        deliveryTransitionType:
          type: number
        deliveryMapImagePath:
          type: string
        isDisplayInputExtensionNumber:
          type: boolean
        recruitNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        recruitCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        recruitExtensionNumber:
          type: string
        recruitFacetimeAddress:
          type: string
        deliveryNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        deliveryCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        deliveryExtensionNumber:
          type: string
        deliveryFacetimeAddress:
          type: string
        otherNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        otherCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        otherExtensionNumber:
          type: string
        otherFacetimeAddress:
          type: string
        taxiNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        taxiCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        taxiExtensionNumber:
          type: string
        taxiFacetimeAddress:
          type: string
        secretaryNotificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        secretaryCallType:
          type: string
          enum:
            - PHONE
            - FACETIME
        secretaryExtensionNumber:
          type: string
        secretaryFacetimeAddress:
          type: string
        isRedMenuHeaderTitle:
          type: boolean
        isRedMenuHeaderSubTitle:
          type: boolean
        deliveryButtonTitle:
          type: string
        groupButtonTitle:
          type: string
        userButtonTitle:
          type: string
        faceRecognitionButtonTitle:
          type: string
        fifthDeliveryTitle:
          type: string
        firstDeliveryTitle:
          type: string
        fourthDeliveryTitle:
          type: string
        menuHeaderTitle:
          type: string
        menuHeaderSubTitle:
          type: string
        otherButtonTitle:
          type: string
        otherDeliveryTitle:
          type: string
        qrCodeButtonTitle:
          type: string
        receptionNumberButtonTitle:
          type: string
        recruitButtonTitle:
          type: string
        secondDeliveryTitle:
          type: string
        secretaryButtonTitle:
          type: string
        sixthDeliveryTitle:
          type: string
        taxiButtonTitle:
          type: string
        thirdDeliveryTitle:
          type: string
        deliveryButtonTitleSecondLanguage:
          type: string
        groupButtonTitleSecondLanguage:
          type: string
        userButtonTitleSecondLanguage:
          type: string
        faceRecognitionButtonTitleSecondLanguage:
          type: string
        fifthDeliveryTitleSecondLanguage:
          type: string
        firstDeliveryTitleSecondLanguage:
          type: string
        fourthDeliveryTitleSecondLanguage:
          type: string
        menuHeaderTitleSecondLanguage:
          type: string
        menuHeaderSubTitleSecondLanguage:
          type: string
        otherButtonTitleSecondLanguage:
          type: string
        otherDeliveryTitleSecondLanguage:
          type: string
        qrCodeButtonTitleSecondLanguage:
          type: string
        receptionNumberButtonTitleSecondLanguage:
          type: string
        recruitButtonTitleSecondLanguage:
          type: string
        secondDeliveryTitleSecondLanguage:
          type: string
        secretaryButtonTitleSecondLanguage:
          type: string
        sixthDeliveryTitleSecondLanguage:
          type: string
        taxiButtonTitleSecondLanguage:
          type: string
        thirdDeliveryTitleSecondLanguage:
          type: string
        logoImageUrl:
          type: string
        deliveryMapImageUrl:
          type: string
      required:
        - recruitCallType
        - deliveryCallType
        - otherCallType
        - taxiCallType
        - secretaryCallType
    GetAppSettingResponseData:
      type: object
      properties:
        appSettingGroups:
          type: array
          items:
            $ref: '#/components/schemas/AppSettingGroupDisplay'
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        planMatchFlag:
          type: boolean
        isAppointmentEnabled:
          type: boolean
        contractLanguages:
          type: array
          items:
            type: string
        updateDateTime:
          format: date-time
          type: string
        appSettingCompanyCommon:
          $ref: '#/components/schemas/AppSettingCompanyCommonData'
        appSettingCompany:
          $ref: '#/components/schemas/AppSettingCompanyData'
        phoneBookId:
          type: number
          minimum: 1
        appSettingId:
          type: number
          minimum: 1
        version:
          type: number
          minimum: 1
        isSelectCompanyEnabled:
          type: boolean
        timezone:
          type: string
      required:
        - plan
        - planMatchFlag
        - isAppointmentEnabled
        - contractLanguages
        - appSettingCompanyCommon
        - isSelectCompanyEnabled
        - timezone
    GetAppSettingResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetAppSettingResponseData'
      required:
        - data
    GetAppSettingDefaultData:
      type: object
      properties:
        callConnectingMessage:
          type: string
        callingMessage:
          type: string
        companyListHeaderTitle:
          type: string
        companyNamePlaceHolderMessage:
          type: string
        companyNameTitle:
          type: string
        deliveryMapMessage:
          type: string
        deliveryReceptionCompleteMessage:
          type: string
        deliveryButtonTitle:
          type: string
        groupButtonTitle:
          type: string
        groupHeaderTitle:
          type: string
        userButtonTitle:
          type: string
        userHeaderTitle:
          type: string
        faceRecognitionButtonTitle:
          type: string
        fifthDeliveryTitle:
          type: string
        firstDeliveryTitle:
          type: string
        fourthDeliveryTitle:
          type: string
        menuHeaderTitle:
          type: string
        menuHeaderSubTitle:
          type: string
        namePlaceHolderMessage:
          type: string
        nameTitle:
          type: string
        notificationCompleteMessage:
          type: string
        otherButtonTitle:
          type: string
        otherDeliveryTitle:
          type: string
        qrCodeButtonTitle:
          type: string
        receptionCompleteMessage:
          type: string
        receptionFailedMessage:
          type: string
        receptionNumberButtonTitle:
          type: string
        recruitButtonTitle:
          type: string
        requirementPlaceHolderMessage:
          type: string
        requirementTitle:
          type: string
        schoolNameTitle:
          type: string
        searchUserPlaceHolderMessage:
          type: string
        secondDeliveryTitle:
          type: string
        secretaryButtonTitle:
          type: string
        sixthDeliveryTitle:
          type: string
        taxiButtonTitle:
          type: string
        thirdDeliveryTitle:
          type: string
        callConnectingMessageSecondLanguage:
          type: string
        callingMessageSecondLanguage:
          type: string
        companyListHeaderTitleSecondLanguage:
          type: string
        companyNamePlaceHolderMessageSecondLanguage:
          type: string
        companyNameTitleSecondLanguage:
          type: string
        deliveryMapMessageSecondLanguage:
          type: string
        deliveryReceptionCompleteMessageSecondLanguage:
          type: string
        deliveryButtonTitleSecondLanguage:
          type: string
        groupButtonTitleSecondLanguage:
          type: string
        groupHeaderTitleSecondLanguage:
          type: string
        userButtonTitleSecondLanguage:
          type: string
        userHeaderTitleSecondLanguage:
          type: string
        faceRecognitionButtonTitleSecondLanguage:
          type: string
        fifthDeliveryTitleSecondLanguage:
          type: string
        firstDeliveryTitleSecondLanguage:
          type: string
        fourthDeliveryTitleSecondLanguage:
          type: string
        menuHeaderTitleSecondLanguage:
          type: string
        menuHeaderSubTitleSecondLanguage:
          type: string
        namePlaceHolderMessageSecondLanguage:
          type: string
        nameTitleSecondLanguage:
          type: string
        notificationCompleteMessageSecondLanguage:
          type: string
        otherButtonTitleSecondLanguage:
          type: string
        otherDeliveryTitleSecondLanguage:
          type: string
        qrCodeButtonTitleSecondLanguage:
          type: string
        receptionCompleteMessageSecondLanguage:
          type: string
        receptionFailedMessageSecondLanguage:
          type: string
        receptionNumberButtonTitleSecondLanguage:
          type: string
        recruitButtonTitleSecondLanguage:
          type: string
        requirementPlaceHolderMessageSecondLanguage:
          type: string
        requirementTitleSecondLanguage:
          type: string
        schoolNameTitleSecondLanguage:
          type: string
        searchUserPlaceHolderMessageSecondLanguage:
          type: string
        secondDeliveryTitleSecondLanguage:
          type: string
        secretaryButtonTitleSecondLanguage:
          type: string
        sixthDeliveryTitleSecondLanguage:
          type: string
        taxiButtonTitleSecondLanguage:
          type: string
        thirdDeliveryTitleSecondLanguage:
          type: string
        logoType:
          type: number
        firstMessageText:
          type: string
        secondMessageText:
          type: string
        thirdMessageText:
          type: string
        deliveryMapImagePath:
          type: string
      required:
        - logoType
    GetAppSettingDefaultResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetAppSettingDefaultData'
      required:
        - data
    AppointmentCorporation:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        nameKana:
          type: string
          nullable: true
        name2:
          type: string
          nullable: true
        phoneNumber:
          type: string
        zipCode:
          type: string
        address:
          type: string
        homePage:
          type: string
          nullable: true
        contractLanguages:
          default:
            - ja
            - en
          type: array
          items:
            type: string
      required:
        - id
        - name
        - nameKana
        - name2
        - phoneNumber
        - zipCode
        - address
        - homePage
        - contractLanguages
    AppointmentCorporationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppointmentCorporation'
      required:
        - data
    InitUpdateAppointmentCoroprationResponseData:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        name2:
          type: string
          nullable: true
        nameKana:
          type: string
          nullable: true
        phoneNumber:
          type: string
        zipCode:
          type: string
        address:
          type: string
        homePage:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
        contractLanguages:
          default:
            - ja
            - en
          type: array
          items:
            type: string
      required:
        - id
        - name
        - name2
        - nameKana
        - phoneNumber
        - zipCode
        - address
        - homePage
        - version
        - contractLanguages
    InitUpdateAppointmentCoroprationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InitUpdateAppointmentCoroprationResponseData'
      required:
        - data
    UpdateAppointmentCorporationRequest:
      type: object
      properties:
        name:
          type: string
        name2:
          type: string
          nullable: true
        nameKana:
          type: string
          nullable: true
        phoneNumber:
          type: string
        zipCode:
          type: string
        address:
          type: string
        homePage:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - name
        - phoneNumber
        - zipCode
        - address
        - version
    CreateChatSettingRequest:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        groupDisplayId:
          type: number
          nullable: true
          minimum: 1
        chatType:
          type: string
          enum:
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
        receptionType:
          type: string
          enum:
            - SECRETARY
            - RECRUIT
            - DELIVERY
            - OTHERS
            - TAXI
        webhook:
          type: string
          nullable: true
          default: https://webhook.example.com/webhook
        apiToken:
          type: string
          nullable: true
          default: apiToken
        roomId:
          type: string
          nullable: true
          default: roomId
        note:
          type: string
          nullable: true
        enable:
          type: boolean
        mentions:
          nullable: true
          type: array
          items:
            type: string
      required:
        - contractId
        - chatType
        - receptionType
        - enable
    UpdateChatSettingRequest:
      type: object
      properties:
        chatType:
          type: string
          enum:
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
        webhook:
          type: string
          nullable: true
          default: https://webhook.example.com/webhook
        apiToken:
          type: string
          nullable: true
          default: apiToken
        roomId:
          type: string
          nullable: true
          default: roomId
        note:
          type: string
          nullable: true
        enable:
          type: boolean
        mentions:
          nullable: true
          type: array
          items:
            type: string
        version:
          type: number
          minimum: 1
      required:
        - chatType
        - enable
        - version
    ChatSettingGroupDisplay:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    GetChatSettingsData:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        receptionType:
          type: string
          enum:
            - SECRETARY
            - RECRUIT
            - DELIVERY
            - OTHERS
            - TAXI
        chatType:
          type: string
          enum:
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
        webhook:
          type: string
          nullable: true
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        enable:
          type: boolean
        version:
          type: number
          minimum: 1
        mentions:
          nullable: true
          type: array
          items:
            type: string
      required:
        - id
        - receptionType
        - chatType
        - webhook
        - apiToken
        - roomId
        - note
        - enable
        - version
        - mentions
    IGetChatSettingsListResponse:
      type: object
      properties:
        localeId:
          type: number
          minimum: 1
        isAppointmentHistoryEnabled:
          type: boolean
        isSelectCompanyEnabled:
          type: boolean
        chatSettingGroups:
          type: array
          items:
            $ref: '#/components/schemas/ChatSettingGroupDisplay'
        list:
          type: array
          items:
            $ref: '#/components/schemas/GetChatSettingsData'
      required:
        - localeId
        - isAppointmentHistoryEnabled
        - isSelectCompanyEnabled
        - list
    GetChatSettingsListResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IGetChatSettingsListResponse'
      required:
        - data
    ChatSettingCsvUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        languageCode:
          type: string
          enum: &ref_58
            - ja
            - en
            - vi
        contractId:
          type: number
          minimum: 1
      required:
        - file
        - languageCode
        - contractId
    UnsupportedMediaTypeErrorResponse:
      type: object
      properties:
        errorCode:
          type: number
          default: 104
      required:
        - errorCode
    Corporations:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        memberCount:
          type: number
        activationCount:
          type: number
      required:
        - id
        - name
        - memberCount
        - activationCount
    CorporationsData:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
        order:
          type: string
          default: asc
        corporations:
          type: array
          items:
            $ref: '#/components/schemas/Corporations'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - corporations
    CorporationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CorporationsData'
      required:
        - data
    UpdateIpWhiteData:
      type: object
      properties:
        name:
          type: string
          description: 名称
        ipAddress:
          type: string
          description: IPアドレス
        note:
          type: string
          description: 備考
      required:
        - ipAddress
    CorporationCreateRequest:
      type: object
      properties:
        name:
          type: string
          default: companyName
        email:
          type: string
          nullable: true
        adminName:
          type: string
          nullable: true
        isIpRestrictionEnabled:
          type: boolean
        ipWhiteList:
          type: array
          items:
            $ref: '#/components/schemas/UpdateIpWhiteData'
      required:
        - name
        - isIpRestrictionEnabled
        - ipWhiteList
    CorporationCreatedData:
      type: object
      properties:
        id:
          type: number
          minimum: 2
      required:
        - id
    CorporationCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CorporationCreatedData'
      required:
        - data
    GetCorporationResponseData:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        userExists:
          type: boolean
        isIpRestrictionEnabled:
          type: boolean
        ipWhiteList:
          type: array
          items:
            type: string
        version:
          type: number
      required:
        - id
        - name
        - userExists
        - isIpRestrictionEnabled
        - ipWhiteList
        - version
    GetCorporationResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetCorporationResponseData'
      required:
        - data
    UpdateCorporationRequest:
      type: object
      properties:
        name:
          type: string
          default: corporationName
        version:
          type: number
          minimum: 1
        email:
          type: string
          nullable: true
        adminName:
          type: string
          nullable: true
        isIpRestrictionEnabled:
          type: boolean
        ipWhiteList:
          type: array
          items:
            $ref: '#/components/schemas/UpdateIpWhiteData'
      required:
        - name
        - version
        - isIpRestrictionEnabled
        - ipWhiteList
    DeleteDevicesRequest:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        ids:
          type: array
          items:
            type: number
            minimum: 1
      required:
        - contractId
        - ids
    ParentGroup:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    InitCreateGroupData:
      type: object
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        languageCodes:
          type: array
          items:
            type: string
        parentGroups:
          type: array
          items:
            $ref: '#/components/schemas/ParentGroup'
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
      required:
        - startDateTime
        - endDateTime
        - languageCodes
        - parentGroups
        - plan
    InitCreateGroupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InitCreateGroupData'
      required:
        - data
    CreateGroupRequest:
      type: object
      properties:
        phoneBookId:
          type: number
          minimum: 1
        displayId:
          type: number
          minimum: 1
        name:
          type: string
          default: groupName
        name2:
          type: string
          nullable: true
          default: groupName2
        parentGroupId:
          type: number
          nullable: true
          minimum: 1
        isRecept:
          type: boolean
          default: false
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
          default: '1234567890'
        isSlack:
          type: boolean
          nullable: true
          default: false
        slackWebhook:
          type: string
          nullable: true
          default: https://slack-webhook.example.com/webhook
        isTeams:
          type: boolean
          nullable: true
          default: false
        teamsWebhook:
          type: string
          nullable: true
          default: https://teams-webhook.example.com/webhook
        isChatwork:
          type: boolean
          nullable: true
          default: false
        apiToken:
          type: string
          nullable: true
          default: apiToken
        roomId:
          type: string
          nullable: true
          default: roomId
        isLineworks:
          type: boolean
          nullable: true
          default: false
        lineworksWebhook:
          type: string
          nullable: true
          default: https://lineworks-webhook.example.com/webhook
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
          default: fake-01@example.com
        mentionsSlack:
          nullable: true
          type: array
          items:
            type: string
        mentionsChatwork:
          nullable: true
          type: array
          items:
            type: string
        mentionsTeams:
          nullable: true
          type: array
          items:
            type: string
        mentionsLineworks:
          nullable: true
          type: array
          items:
            type: string
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
      required:
        - phoneBookId
        - displayId
        - name
        - isRecept
        - notificationType
        - callType
    ChildGroup:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        displayId:
          type: number
          minimum: 1
        name:
          type: string
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        isEmail:
          type: boolean
          nullable: true
          default: false
        isSlack:
          type: boolean
          nullable: true
          default: false
        isTeams:
          type: boolean
          nullable: true
          default: false
        isChatwork:
          type: boolean
          nullable: true
          default: false
        isLineworks:
          type: boolean
          nullable: true
          default: false
      required:
        - id
        - displayId
        - name
        - notificationType
        - extensionNumber
        - callType
        - facetimeAddress
        - isEmail
        - isSlack
        - isTeams
        - isChatwork
        - isLineworks
    GroupUser:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        faceminUserDisplayId:
          type: number
          minimum: 1
          nullable: true
        name:
          type: string
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        enable:
          type: boolean
        isEmail:
          type: boolean
          nullable: true
          default: false
        isSlack:
          type: boolean
          nullable: true
          default: false
        isTeams:
          type: boolean
          nullable: true
          default: false
        isChatwork:
          type: boolean
          nullable: true
          default: false
        isLineworks:
          type: boolean
          nullable: true
          default: false
      required:
        - id
        - faceminUserDisplayId
        - name
        - notificationType
        - extensionNumber
        - callType
        - facetimeAddress
        - enable
        - isEmail
        - isSlack
        - isTeams
        - isChatwork
        - isLineworks
    IGroupDetail:
      type: object
      properties:
        displayId:
          type: number
          minimum: 1
        name:
          type: string
        name2:
          type: string
          nullable: true
        isRecept:
          type: boolean
          default: false
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        languageCodes:
          type: array
          items:
            type: string
            enum:
              - ja
              - en
              - vi
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        parentGroup:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/ParentGroup'
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
        isSlack:
          type: boolean
          nullable: true
          default: false
        mentionsSlack:
          nullable: true
          type: array
          items:
            type: string
        slackWebhook:
          type: string
          nullable: true
        isTeams:
          type: boolean
          nullable: true
          default: false
        mentionsTeams:
          nullable: true
          type: array
          items:
            type: string
        teamsWebhook:
          type: string
          nullable: true
        isChatwork:
          type: boolean
          nullable: true
          default: false
        mentionsChatwork:
          nullable: true
          type: array
          items:
            type: string
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        isLineworks:
          type: boolean
          nullable: true
          default: false
        mentionsLineworks:
          nullable: true
          type: array
          items:
            type: string
        lineworksWebhook:
          type: string
          nullable: true
        childGroups:
          type: array
          items:
            $ref: '#/components/schemas/ChildGroup'
        groupUsers:
          description: 部署社員情報
          type: array
          items:
            $ref: '#/components/schemas/GroupUser'
      required:
        - displayId
        - name
        - name2
        - isRecept
        - notificationType
        - extensionNumber
        - plan
        - languageCodes
        - startDateTime
        - endDateTime
        - parentGroup
        - callType
        - facetimeAddress
        - isEmail
        - email
        - isSlack
        - mentionsSlack
        - slackWebhook
        - isTeams
        - mentionsTeams
        - teamsWebhook
        - isChatwork
        - mentionsChatwork
        - apiToken
        - roomId
        - isLineworks
        - mentionsLineworks
        - lineworksWebhook
        - childGroups
        - groupUsers
    GroupDetail:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IGroupDetail'
      required:
        - data
    InitUpdateGroupData:
      type: object
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        languageCodes:
          type: array
          items:
            type: string
        parentGroups:
          type: array
          items:
            $ref: '#/components/schemas/ParentGroup'
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        displayId:
          type: number
          minimum: 1
        name:
          type: string
        name2:
          type: string
          nullable: true
        isRecept:
          type: boolean
          default: false
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        parentGroupId:
          type: number
          nullable: true
          minimum: 1
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        isSlack:
          type: boolean
          nullable: true
          default: false
        mentionsSlack:
          type: array
          items:
            type: string
        slackWebhook:
          type: string
          nullable: true
        isTeams:
          type: boolean
          nullable: true
          default: false
        mentionsTeams:
          type: array
          items:
            type: string
        teamsWebhook:
          type: string
          nullable: true
        isChatwork:
          type: boolean
          nullable: true
          default: false
        mentionsChatwork:
          type: array
          items:
            type: string
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
        isLineworks:
          type: boolean
          nullable: true
          default: false
        mentionsLineworks:
          type: array
          items:
            type: string
        lineworksWebhook:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - startDateTime
        - endDateTime
        - languageCodes
        - parentGroups
        - plan
        - displayId
        - name
        - name2
        - isRecept
        - notificationType
        - extensionNumber
        - parentGroupId
        - callType
        - facetimeAddress
        - isSlack
        - mentionsSlack
        - slackWebhook
        - isTeams
        - mentionsTeams
        - teamsWebhook
        - isChatwork
        - mentionsChatwork
        - apiToken
        - roomId
        - isEmail
        - email
        - isLineworks
        - mentionsLineworks
        - lineworksWebhook
        - version
    InitUpdateGroupResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InitUpdateGroupData'
      required:
        - data
    UpdateGroupRequest:
      type: object
      properties:
        displayId:
          type: number
          minimum: 1
        name:
          type: string
          default: groupName
        name2:
          type: string
          nullable: true
          default: groupName2
        parentGroupId:
          type: number
          nullable: true
          minimum: 1
        isRecept:
          type: boolean
          default: false
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
          default: '1234567890'
        isSlack:
          type: boolean
          nullable: true
          default: false
        slackWebhook:
          type: string
          nullable: true
          default: https://slack-webhook.example.com/webhook
        mentionsSlack:
          nullable: true
          type: array
          items:
            type: string
        isTeams:
          type: boolean
          nullable: true
          default: false
        teamsWebhook:
          type: string
          nullable: true
          default: https://teams-webhook.example.com/webhook
        mentionsTeams:
          nullable: true
          type: array
          items:
            type: string
        isChatwork:
          type: boolean
          nullable: true
          default: false
        apiToken:
          type: string
          nullable: true
          default: apiToken
        roomId:
          type: string
          nullable: true
          default: roomId
        mentionsChatwork:
          nullable: true
          type: array
          items:
            type: string
        isLineworks:
          type: boolean
          nullable: true
          default: false
        lineworksWebhook:
          type: string
          nullable: true
          default: https://webhook.worksmobile.com
        mentionsLineworks:
          nullable: true
          type: array
          items:
            type: string
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
          default: fake-01@example.com
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - displayId
        - name
        - isRecept
        - notificationType
        - callType
        - version
    InitUpdateGroupHierarchyInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        displayId:
          type: number
          minimum: 1
        name:
          type: string
        parentGroupId:
          type: number
          nullable: true
          minimum: 1
        version:
          type: number
          minimum: 1
      required:
        - id
        - displayId
        - name
        - parentGroupId
        - version
    InitUpdateGroupHierarchiesData:
      type: object
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/InitUpdateGroupHierarchyInfo'
      required:
        - startDateTime
        - endDateTime
        - groups
    InitUpdateGroupHierarchiesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InitUpdateGroupHierarchiesData'
      required:
        - data
    UpdateGroupHierarchyInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        parentGroupId:
          type: number
          nullable: true
          minimum: 1
        version:
          type: number
          minimum: 1
      required:
        - id
        - version
    UpdateGroupHierarchiesRequest:
      type: object
      properties:
        phoneBookId:
          type: number
          minimum: 1
        groups:
          type: array
          items:
            $ref: '#/components/schemas/UpdateGroupHierarchyInfo'
      required:
        - phoneBookId
        - groups
    InitGroupUsers:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        order:
          type: number
          minimum: 1
        version:
          type: number
          minimum: 1
        accountId:
          type: number
          nullable: true
      required:
        - id
        - name
        - order
        - version
        - accountId
    GroupIdGroupUsersInitData:
      type: object
      properties:
        name:
          type: string
        phoneBookStartDateTime:
          format: date-time
          type: string
        phoneBookEndDateTime:
          format: date-time
          type: string
          nullable: true
        groupUsers:
          type: array
          items:
            $ref: '#/components/schemas/InitGroupUsers'
      required:
        - name
        - phoneBookStartDateTime
        - phoneBookEndDateTime
        - groupUsers
    GroupIdGroupUsersInitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupIdGroupUsersInitData'
      required:
        - data
    GroupUsers:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        version:
          type: number
          minimum: 1
      required:
        - id
        - version
    UpdateGroupUsersRequest:
      type: object
      properties:
        groupUsers:
          type: array
          items:
            $ref: '#/components/schemas/GroupUsers'
      required:
        - groupUsers
    GroupUserGroup:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
      required:
        - id
        - name
    InitCreateGroupUserData:
      type: object
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        languageCodes:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupUserGroup'
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
      required:
        - startDateTime
        - endDateTime
        - languageCodes
        - groups
        - plan
    InitCreateGroupUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InitCreateGroupUserData'
      required:
        - data
    CreateGroupUserRequest:
      type: object
      properties:
        phoneBookId:
          type: number
          minimum: 1
        userId:
          type: number
          nullable: true
          minimum: 1
        name:
          type: string
          default: groupUserName
        name2:
          type: string
          nullable: true
          default: groupUserName2
        kanaName:
          type: string
          nullable: true
          default: groupUserKanaName
        position:
          type: string
          nullable: true
          default: position
        position2:
          type: string
          nullable: true
          default: position2
        groupId:
          type: number
          minimum: 1
        enable:
          type: boolean
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        extensionNumber:
          type: string
          nullable: true
          default: '1234567890'
        isSlack:
          type: boolean
          nullable: true
          default: false
        slackWebhook:
          type: string
          nullable: true
          default: https://slack-webhook.example.com/webhook
        mentionsSlack:
          nullable: true
          type: array
          items:
            type: string
        isTeams:
          type: boolean
          nullable: true
          default: false
        teamsWebhook:
          type: string
          nullable: true
          default: https://teams-webhook.example.com/webhook
        mentionsTeams:
          nullable: true
          type: array
          items:
            type: string
        isChatwork:
          type: boolean
          nullable: true
          default: false
        apiToken:
          type: string
          nullable: true
          default: apiToken
        roomId:
          type: string
          nullable: true
          default: roomId
        mentionsChatwork:
          nullable: true
          type: array
          items:
            type: string
        isLineworks:
          type: boolean
          nullable: true
          default: false
        lineworksWebhook:
          type: string
          nullable: true
          default: https://lineworks-webhook.example.com/webhook
        mentionsLineworks:
          nullable: true
          type: array
          items:
            type: string
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
          default: fake-01@example.com
      required:
        - phoneBookId
        - name
        - groupId
        - enable
        - notificationType
        - callType
    InitUpdateGroupUserData:
      type: object
      properties:
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        languageCodes:
          type: array
          items:
            type: string
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupUserGroup'
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        userId:
          type: number
          minimum: 1
          nullable: true
        userDisplayId:
          type: number
          minimum: 1
          nullable: true
        userName:
          type: string
          nullable: true
        name:
          type: string
        name2:
          type: string
          nullable: true
        kanaName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        position2:
          type: string
          nullable: true
        groupId:
          type: number
          minimum: 1
          nullable: true
        enable:
          type: boolean
          default: true
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
        isSlack:
          type: boolean
          nullable: true
          default: false
        mentionsSlack:
          type: array
          items:
            type: string
        slackWebhook:
          type: string
          nullable: true
        isTeams:
          type: boolean
          nullable: true
          default: false
        mentionsTeams:
          type: array
          items:
            type: string
        teamsWebhook:
          type: string
          nullable: true
        isChatwork:
          type: boolean
          nullable: true
          default: false
        mentionsChatwork:
          type: array
          items:
            type: string
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
        isLineworks:
          type: boolean
          nullable: true
          default: false
        mentionsLineworks:
          type: array
          items:
            type: string
        lineworksWebhook:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - startDateTime
        - endDateTime
        - languageCodes
        - groups
        - plan
        - userId
        - userDisplayId
        - userName
        - name
        - name2
        - kanaName
        - position
        - position2
        - groupId
        - enable
        - notificationType
        - extensionNumber
        - callType
        - facetimeAddress
        - isSlack
        - mentionsSlack
        - slackWebhook
        - isTeams
        - mentionsTeams
        - teamsWebhook
        - isChatwork
        - mentionsChatwork
        - apiToken
        - roomId
        - isEmail
        - email
        - isLineworks
        - mentionsLineworks
        - lineworksWebhook
        - version
    InitUpdateGroupUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InitUpdateGroupUserData'
      required:
        - data
    UpdateGroupUserRequest:
      type: object
      properties:
        userId:
          type: number
          nullable: true
          minimum: 1
        name:
          type: string
          default: groupUserName
        name2:
          type: string
          nullable: true
          default: groupUserName2
        kanaName:
          type: string
          nullable: true
          default: groupUserKanaName
        position:
          type: string
          nullable: true
          default: position
        position2:
          type: string
          nullable: true
          default: position2
        groupId:
          type: number
          minimum: 1
        enable:
          type: boolean
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
          default: '1234567890'
        isSlack:
          type: boolean
          nullable: true
          default: false
        mentionsSlack:
          nullable: true
          type: array
          items:
            type: string
        slackWebhook:
          type: string
          nullable: true
          default: https://slack-webhook.example.com/webhook
        isTeams:
          type: boolean
          nullable: true
          default: false
        mentionsTeams:
          nullable: true
          type: array
          items:
            type: string
        teamsWebhook:
          type: string
          nullable: true
          default: https://teams-webhook.example.com/webhook
        isChatwork:
          type: boolean
          nullable: true
          default: false
        mentionsChatwork:
          nullable: true
          type: array
          items:
            type: string
        apiToken:
          type: string
          nullable: true
          default: apiToken
        isLineworks:
          type: boolean
          nullable: true
          default: false
        mentionsLineworks:
          nullable: true
          type: array
          items:
            type: string
        lineworksWebhook:
          type: string
          nullable: true
          default: https://lineworks-webhook.example.com/webhook
        roomId:
          type: string
          nullable: true
          default: roomId
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
          default: fake-01@example.com
        version:
          type: number
          minimum: 1
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
      required:
        - name
        - groupId
        - enable
        - notificationType
        - version
        - callType
    GroupUserImformation:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        groupId:
          type: number
          nullable: true
        name:
          type: string
        accountId:
          type: number
          nullable: true
        groupName:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - id
        - groupId
        - name
        - accountId
        - groupName
        - version
    GroupUsersData:
      type: object
      properties:
        groupUsers:
          type: array
          items:
            $ref: '#/components/schemas/GroupUserImformation'
      required:
        - groupUsers
    GroupUsersSearchResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupUsersData'
      required:
        - data
    IGroupUserDetail:
      type: object
      properties:
        userDisplayId:
          type: number
          nullable: true
          minimum: 1
        name:
          type: string
        name2:
          type: string
          nullable: true
        kanaName:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        position2:
          type: string
          nullable: true
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        enable:
          type: boolean
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        languageCodes:
          type: array
          items:
            type: string
            enum:
              - ja
              - en
              - vi
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
        groupName:
          type: string
          nullable: true
        isEmail:
          type: boolean
          nullable: true
          default: false
        email:
          type: string
          nullable: true
        isSlack:
          type: boolean
          nullable: true
          default: false
        slackWebhook:
          type: string
          nullable: true
        mentionsSlack:
          type: array
          items:
            type: string
        isTeams:
          type: boolean
          nullable: true
          default: false
        teamsWebhook:
          type: string
          nullable: true
        mentionsTeams:
          type: array
          items:
            type: string
        isChatwork:
          type: boolean
          nullable: true
          default: false
        apiToken:
          type: string
          nullable: true
        roomId:
          type: string
          nullable: true
        mentionsChatwork:
          type: array
          items:
            type: string
        isLineworks:
          type: boolean
          nullable: true
          default: false
        lineworksWebhook:
          type: string
          nullable: true
        mentionsLineworks:
          type: array
          items:
            type: string
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
      required:
        - userDisplayId
        - name
        - name2
        - kanaName
        - position
        - position2
        - notificationType
        - extensionNumber
        - enable
        - plan
        - languageCodes
        - startDateTime
        - endDateTime
        - groupName
        - isEmail
        - email
        - isSlack
        - slackWebhook
        - mentionsSlack
        - isTeams
        - teamsWebhook
        - mentionsTeams
        - isChatwork
        - apiToken
        - roomId
        - mentionsChatwork
        - isLineworks
        - lineworksWebhook
        - mentionsLineworks
        - callType
        - facetimeAddress
    GroupUserDetail:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IGroupUserDetail'
      required:
        - data
    NewsInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        title:
          type: string
        text:
          type: string
      required:
        - id
        - title
        - text
    ActivationInfo:
      type: object
      properties:
        activationName:
          type: string
        activationPlan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        groupUserCount:
          type: number
        maxUser:
          type: number
          nullable: true
        deviceCount:
          type: number
        maxDevice:
          type: number
          nullable: true
        devices:
          type: array
          items:
            type: string
      required:
        - activationName
        - activationPlan
        - groupUserCount
        - maxUser
        - deviceCount
        - maxDevice
        - devices
    IHomeInfoResponse:
      type: object
      properties:
        newsList:
          type: array
          items:
            $ref: '#/components/schemas/NewsInfo'
        totalFaceminCount:
          type: number
        activation:
          $ref: '#/components/schemas/ActivationInfo'
      required:
        - newsList
    HomeInfoResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IHomeInfoResponse'
      required:
        - data
    Locale:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
      required:
        - id
        - name
    LocalesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Locale'
        total:
          type: number
      required:
        - data
        - total
    ITimeZoneResponse:
      type: object
      properties:
        timeZone:
          type: string
      required:
        - timeZone
    TimeZoneResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ITimeZoneResponse'
      required:
        - data
    LoginRequest:
      type: object
      properties:
        corporationId:
          type: number
          default: 1
        email:
          type: string
          default: fake-01@example.com
        password:
          type: string
          default: test
      required:
        - corporationId
        - email
        - password
    Login:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken
    LoginResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Login'
      required:
        - data
    ForgotPasswordRequest:
      type: object
      properties:
        corporationId:
          type: number
          minimum: 0
        email:
          type: string
          default: to@example.com
        languageCode:
          type: string
          enum:
            - ja
            - en
            - vi
      required:
        - corporationId
        - email
        - languageCode
    ForgotPasswordResetRequest:
      type: object
      properties:
        token:
          type: string
        corporationId:
          type: number
          minimum: 0
        password:
          type: string
      required:
        - token
        - corporationId
        - password
    IPhoneBook:
      type: object
      properties:
        phoneBookId:
          type: number
          minimum: 1
        startDateTime:
          format: date-time
          type: string
        endDateTime:
          format: date-time
          type: string
          nullable: true
      required:
        - phoneBookId
        - startDateTime
        - endDateTime
    PhoneBookGroup:
      type: object
      properties:
        groupId:
          type: number
          minimum: 1
        displayId:
          type: number
          minimum: 1
        name:
          type: string
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        parentGroupId:
          type: number
          nullable: true
          minimum: 1
        chatTypes:
          default:
            - EMAIL
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
          type: array
          items:
            type: string
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
      required:
        - groupId
        - displayId
        - name
        - notificationType
        - extensionNumber
        - parentGroupId
        - chatTypes
        - callType
        - facetimeAddress
    PhoneBookGroupUser:
      type: object
      properties:
        groupUserId:
          type: number
          minimum: 1
        groupId:
          type: number
          nullable: true
          minimum: 1
        name:
          type: string
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        extensionNumber:
          type: string
          nullable: true
        chatTypes:
          default:
            - EMAIL
            - SLACK
            - TEAMS
            - CHATWORK
            - LINEWORKS
          type: array
          items:
            type: string
        callType:
          type: string
          enum:
            - PHONE
            - FACETIME
          nullable: true
        facetimeAddress:
          type: string
          nullable: true
      required:
        - groupUserId
        - groupId
        - name
        - notificationType
        - extensionNumber
        - chatTypes
        - callType
        - facetimeAddress
    IPhoneBookInfo:
      type: object
      properties:
        phoneBookId:
          type: number
          minimum: 1
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        groupUserCount:
          type: number
        groups:
          type: array
          items:
            $ref: '#/components/schemas/PhoneBookGroup'
        groupUsers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneBookGroupUser'
      required:
        - phoneBookId
        - plan
        - groupUserCount
        - groups
        - groupUsers
    IPhoneBookList:
      type: object
      properties:
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        isAppointmentHistoryEnabled:
          type: boolean
        maxUser:
          type: number
          nullable: true
        localeId:
          type: number
        phoneBooks:
          type: array
          items:
            $ref: '#/components/schemas/IPhoneBook'
        phoneBookInfo:
          $ref: '#/components/schemas/IPhoneBookInfo'
      required:
        - plan
        - isAppointmentHistoryEnabled
        - maxUser
        - localeId
        - phoneBooks
    PhoneBookList:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IPhoneBookList'
      required:
        - data
    CreatePhoneBookRequest:
      type: object
      properties:
        contractId:
          type: number
          minimum: 1
        startDateTime:
          type: string
          format: date-time
        isCopyAllowed:
          type: boolean
          description: 'True: 元の電話帳をコピーする / False: 元の電話帳をコピーしない'
      required:
        - contractId
        - startDateTime
        - isCopyAllowed
    IUpdatePhoneBookInitResponse:
      type: object
      properties:
        startDateTime:
          format: date-time
          type: string
        version:
          type: number
          minimum: 1
      required:
        - startDateTime
        - version
    UpdatePhoneBookInitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IUpdatePhoneBookInitResponse'
      required:
        - data
    UpdatePhoneBookRequest:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
        version:
          type: number
          minimum: 1
      required:
        - startDateTime
        - version
    PhoneBookCsvUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        languageCode:
          type: string
          enum: *ref_58
        phoneBookId:
          type: number
          minimum: 1
      required:
        - file
        - languageCode
        - phoneBookId
    BadRequestErrorResponseWithMessages:
      type: object
      properties:
        errorCode:
          type: number
          default: 10045
        messages:
          type: array
          items:
            type: string
          example:
            - error message
      required:
        - errorCode
    PhoneBookExportData:
      type: object
      properties:
        groupOrUser:
          type: number
        id:
          type: object
          example: 1
        name:
          type: string
        name2:
          type: string
        kanaName:
          type: string
        parentGroupId:
          type: object
          example: 1
        position:
          type: string
        position2:
          type: string
        isRecept:
          type: object
          example: 1
        enable:
          type: object
          example: 1
        notificationType:
          type: number
        callType:
          type: object
          example: 1
        extensionNumber:
          type: object
          example: 1
        facetimeAddress:
          type: string
        isSlackEnabled:
          type: number
        webhookUrlSlack:
          type: string
        mentionsSlack:
          type: object
          example: 1
        isTeamsEnabled:
          type: number
        webhookUrlTeams:
          type: string
        mentionsTeams:
          type: object
          example: 1
        isChatworkEnabled:
          type: number
        apiTokenChatwork:
          type: string
        roomIdChatwork:
          type: string
        mentionsChatwork:
          type: object
          example: 1
        isLineworksEnabled:
          type: number
        webhookUrlLineworks:
          type: string
        mentionsLineworks:
          type: object
          example: 1
        isEmailEnabled:
          type: number
        email:
          type: string
      required:
        - groupOrUser
        - id
        - name
        - name2
        - kanaName
        - parentGroupId
        - position
        - position2
        - isRecept
        - enable
        - notificationType
        - callType
        - extensionNumber
        - facetimeAddress
        - isSlackEnabled
        - webhookUrlSlack
        - mentionsSlack
        - isTeamsEnabled
        - webhookUrlTeams
        - mentionsTeams
        - isChatworkEnabled
        - apiTokenChatwork
        - roomIdChatwork
        - mentionsChatwork
        - isLineworksEnabled
        - webhookUrlLineworks
        - mentionsLineworks
        - isEmailEnabled
        - email
    PhoneBooksExportData:
      type: object
      properties:
        lastId:
          type: number
          minimum: 1
        phoneBooks:
          type: array
          items:
            $ref: '#/components/schemas/PhoneBookExportData'
      required:
        - phoneBooks
    PhoneBookExportResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PhoneBooksExportData'
      required:
        - data
    CreateOneNewsRequest:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      required:
        - title
        - text
        - startDate
        - endDate
    NewsItemInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        title:
          type: string
        text:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
        - id
        - title
        - text
        - startDate
        - endDate
    INewsListResponse:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
          default: stratDate
          enum:
            - startDate
        order:
          type: string
          default: desc
          enum:
            - desc
        news:
          type: array
          items:
            $ref: '#/components/schemas/NewsItemInfo'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - news
    NewsListResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/INewsListResponse'
      required:
        - data
    GetOneNewsData:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        version:
          type: number
          minimum: 1
      required:
        - title
        - text
        - startDate
        - endDate
        - version
    GetOneNewsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetOneNewsData'
      required:
        - data
    UpdateOneNewsRequest:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        version:
          type: number
          minimum: 1
      required:
        - title
        - text
        - startDate
        - endDate
        - version
    TokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
      required:
        - refreshToken
    Token:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
      required:
        - accessToken
        - refreshToken
    TokenResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Token'
      required:
        - data
    IEnterAdminUser:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
      required:
        - id
        - name
        - email
    IEnterAdminUsersData:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/IEnterAdminUser'
      required:
        - users
    IEnterAdminUsersResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/IEnterAdminUsersData'
      required:
        - data
    CreateIEnterAdminUserRequest:
      type: object
      properties:
        name:
          type: string
          default: userName
        email:
          type: string
          default: fake-01@example.com
      required:
        - name
        - email
    IEnterAdminUserData:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        version:
          type: number
      required:
        - id
        - name
        - email
        - version
    IEnterAdminUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IEnterAdminUserData'
      required:
        - data
    UpdateIEnterAdminUserRequest:
      type: object
      properties:
        name:
          type: string
          default: userName
        version:
          type: number
          minimum: 1
      required:
        - name
        - version
    FaceminUser:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        displayId:
          type: number
        name:
          type: string
        email:
          type: string
        role:
          type: string
        isOperationRepresentative:
          type: boolean
      required:
        - id
        - displayId
        - name
        - email
        - role
        - isOperationRepresentative
    FaceminUsersData:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
        order:
          type: string
          default: asc
        users:
          type: array
          items:
            $ref: '#/components/schemas/FaceminUser'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - users
    FaceminUsersResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FaceminUsersData'
      required:
        - data
    CreateFaceminUserRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          default: fake-01@example.com
        displayId:
          type: number
          minimum: 1
        role:
          type: string
          default: GENERAL
          enum: &ref_59
            - ADMIN
            - GENERAL
        isOperationRepresentative:
          type: boolean
          description: 'True: 運用担当者にする / False: 運用担当者にしない'
      required:
        - name
        - email
        - displayId
        - role
        - isOperationRepresentative
    FaceminUserData:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        displayId:
          type: number
          minimum: 1
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum: *ref_59
        version:
          type: number
          minimum: 1
        isOperationRepresentative:
          type: boolean
      required:
        - id
        - displayId
        - name
        - email
        - role
        - version
        - isOperationRepresentative
    FaceminUserResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FaceminUserData'
      required:
        - data
    UpdateFaceminUserRequest:
      type: object
      properties:
        displayId:
          type: number
          minimum: 1
        name:
          type: string
          default: userName
        role:
          type: string
          default: GENERAL
          enum: *ref_59
        version:
          type: number
          minimum: 1
        isOperationRepresentative:
          type: boolean
          description: 'True: 運用担当者にする / False: 運用担当者にしない'
      required:
        - displayId
        - name
        - role
        - version
        - isOperationRepresentative
    CsvUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
        languageCode:
          type: string
          enum: *ref_58
      required:
        - file
        - languageCode
    FaceminUserExportUserData:
      type: object
      properties:
        displayId:
          type: number
          minimum: 1
        name:
          type: string
          example: userName
        email:
          type: string
          example: email@example.com
        role:
          type: string
          enum: *ref_59
        isOperationRepresentative:
          type: number
          enum:
            - 0
            - 1
      required:
        - displayId
        - name
        - email
        - role
        - isOperationRepresentative
    FaceminUserExportData:
      type: object
      properties:
        lastId:
          type: number
          minimum: 1
        users:
          type: array
          items:
            $ref: '#/components/schemas/FaceminUserExportUserData'
      required:
        - users
    FaceminUserExportResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FaceminUserExportData'
      required:
        - data
    LinkedFaceminUser:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        displayId:
          type: number
          minimum: 1
          nullable: true
        name:
          type: string
        linkedFlg:
          type: boolean
      required:
        - id
        - displayId
        - name
        - linkedFlg
    LinkedFaceminUsersData:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/LinkedFaceminUser'
      required:
        - users
    LinkedFaceminUsersResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LinkedFaceminUsersData'
      required:
        - data
    InformationFaceminPics:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        name:
          type: string
        email:
          type: string
      required:
        - id
        - name
        - email
    InformationFaceminPicsData:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/InformationFaceminPics'
      required:
        - users
    InformationFaceminPicsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InformationFaceminPicsData'
      required:
        - data
    ReceptionExportData:
      type: object
      properties:
        visitTime:
          type: string
          nullable: false
        exitTime:
          type: string
          nullable: false
        companyName:
          type: string
          nullable: false
        visitorName:
          type: string
          nullable: false
        address:
          type: string
          nullable: false
        appoinmentDate:
          type: string
          nullable: false
        roomName:
          type: string
          nullable: false
        title:
          type: string
          nullable: false
        note:
          type: string
          nullable: false
        route:
          type: string
          nullable: false
        mode:
          type: string
          nullable: false
      required:
        - visitTime
        - exitTime
        - companyName
        - visitorName
        - address
        - appoinmentDate
        - roomName
        - title
        - note
        - route
        - mode
    ReceptionsExportData:
      type: object
      properties:
        lastId:
          type: number
          minimum: 1
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/ReceptionExportData'
      required:
        - receptions
    ReceptionsExportResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ReceptionsExportData'
      required:
        - data
    AppointmentVisitors:
      type: object
      properties:
        email:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        companyName:
          type: string
          nullable: true
      required:
        - email
        - name
        - companyName
    AppointmentUsers:
      type: object
      properties:
        name:
          type: string
          nullable: true
      required:
        - name
    GeneralReceptions:
      type: object
      properties:
        affiliation:
          type: string
          nullable: true
        visitorName:
          type: string
          nullable: true
        receptionist:
          type: string
          nullable: true
        business:
          type: string
          nullable: true
      required:
        - affiliation
        - visitorName
        - receptionist
        - business
    IReceptionsDetail:
      type: object
      properties:
        route:
          type: string
        visitTime:
          format: date-time
          type: string
        exitTime:
          format: date-time
          type: string
          nullable: true
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentVisitors'
        startDate:
          format: date-time
          type: string
          nullable: true
        endDate:
          format: date-time
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        receptionNumber:
          type: number
          minimum: 1
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentUsers'
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        generalReceptions:
          $ref: '#/components/schemas/GeneralReceptions'
      required:
        - route
        - visitTime
        - exitTime
        - appointmentVisitors
        - startDate
        - endDate
        - roomName
        - title
        - note
        - receptionNumber
        - appointmentUsers
        - notificationType
        - generalReceptions
    ReceptionsDetail:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IReceptionsDetail'
      required:
        - data
    GeneralReceptionRequest:
      type: object
      properties:
        affiliation:
          type: string
        visitorName:
          type: string
        receptionist:
          type: string
        business:
          type: string
      required:
        - visitorName
        - receptionist
    UpdateReceptionsRequest:
      type: object
      properties:
        visitTime:
          type: string
          format: date-time
        exitTime:
          type: string
          format: date-time
        generalReceptions:
          nullable: true
          allOf:
            - $ref: '#/components/schemas/GeneralReceptionRequest'
        version:
          type: number
          minimum: 1
      required:
        - visitTime
        - generalReceptions
        - version
    GeneralReception:
      type: object
      properties:
        visitorName:
          type: string
          nullable: true
        receptionistName:
          type: string
          nullable: true
        affiliation:
          type: string
          nullable: true
    Appointment:
      type: object
      properties:
        visitorsName:
          nullable: true
          type: array
          items:
            type: string
        receptionistName:
          type: string
          nullable: true
    ReceptionsDetailByContractId:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        route:
          type: string
          enum:
            - GROUP
            - USER
            - RECRUIT
            - OTHER
            - DELIVERY
            - SECRETARY
            - TAXI
            - QR
            - RECEPTION_CODE
            - FACE_RECOGNITION
        mode:
          type: string
          enum:
            - GENERAL
            - APPOINTMENT
        visitTime:
          format: date-time
          type: string
        exitTime:
          format: date-time
          type: string
          nullable: true
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        general:
          $ref: '#/components/schemas/GeneralReception'
        appointment:
          $ref: '#/components/schemas/Appointment'
      required:
        - id
        - route
        - mode
        - visitTime
        - notificationType
        - general
        - appointment
    IReceptionsResponse:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
          default: visitTime
          enum:
            - id
            - visitTime
            - exitTime
            - route
        order:
          type: string
          default: asc
        localeId:
          type: number
          minimum: 1
        receptions:
          type: array
          items:
            $ref: '#/components/schemas/ReceptionsDetailByContractId'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - localeId
        - receptions
    ReceptionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IReceptionsResponse'
      required:
        - data
    IArrivalHistoryAndInitialInfo:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        plan:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        notificationType:
          type: string
          enum:
            - CALL
            - CHAT
            - CHAT_CALL
        route:
          type: string
        visitTime:
          format: date-time
          type: string
        exitTime:
          format: date-time
          type: string
          nullable: true
        appointmentVisitors:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentVisitors'
        startDate:
          format: date-time
          type: string
          nullable: true
        endDate:
          format: date-time
          type: string
          nullable: true
        roomName:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        note:
          type: string
          nullable: true
        receptionNumber:
          type: number
          minimum: 1
        appointmentUsers:
          type: array
          items:
            $ref: '#/components/schemas/AppointmentUsers'
        appointmentId:
          type: number
          minimum: 1
        version:
          type: number
          minimum: 1
        generalReceptions:
          $ref: '#/components/schemas/GeneralReceptions'
      required:
        - id
        - plan
        - notificationType
        - route
        - visitTime
        - exitTime
        - appointmentVisitors
        - startDate
        - endDate
        - roomName
        - title
        - note
        - receptionNumber
        - appointmentUsers
        - appointmentId
        - version
        - generalReceptions
    ArrivalHistoryAndInitialInfo:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IArrivalHistoryAndInitialInfo'
      required:
        - data
    UserOperationRepresentatives:
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - IENTER_ADMIN
            - ADMIN
            - GENERAL
        corporation:
          $ref: '#/components/schemas/Corporation'
      required:
        - id
        - name
        - email
        - role
        - corporation
    UserOperationRepresentativesResponse:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
        order:
          type: string
          default: asc
        userOperationRepresentatives:
          type: array
          items:
            $ref: '#/components/schemas/UserOperationRepresentatives'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - userOperationRepresentatives
    InformationEmailRequest:
      type: object
      properties:
        title:
          type: string
        txtBody:
          type: string
      required:
        - title
        - txtBody
    Visitors:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        email:
          type: string
        name:
          type: string
        companyName:
          type: string
          nullable: true
      required:
        - id
        - email
        - name
    VisitorsData:
      type: object
      properties:
        visitors:
          type: array
          items:
            $ref: '#/components/schemas/Visitors'
      required:
        - visitors
    VisitorsSearchResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VisitorsData'
      required:
        - data
    UpdateVisitorsRequest:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        companyName:
          type: string
          nullable: true
        version:
          type: number
          minimum: 1
      required:
        - email
        - name
        - version
    VisitorsList:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        email:
          type: string
        name:
          type: string
        companyName:
          type: string
          nullable: true
      required:
        - id
        - email
        - name
    IVisitorsResponse:
      type: object
      properties:
        total:
          type: number
        page:
          type: number
          default: 1
        limit:
          type: number
          default: 50
        sort:
          type: string
        order:
          type: string
          default: asc
        visitors:
          type: array
          items:
            $ref: '#/components/schemas/VisitorsList'
      required:
        - total
        - page
        - limit
        - sort
        - order
        - visitors
    VisitorsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IVisitorsResponse'
      required:
        - data
    VisitorDetailData:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        email:
          type: string
        name:
          type: string
        companyName:
          type: string
          nullable: true
      required:
        - id
        - email
        - name
    VisitorDetailResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VisitorDetailData'
      required:
        - data
    VisitorInitData:
      type: object
      properties:
        id:
          type: number
          minimum: 1
        email:
          type: string
        name:
          type: string
        companyName:
          type: string
          nullable: true
        version:
          type: number
      required:
        - id
        - email
        - name
        - version
    VisitorsInitResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VisitorInitData'
      required:
        - data
    AppVersions:
      type: object
      properties:
        appVersion:
          type: string
      required:
        - appVersion
    AppVersionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppVersions'
      required:
        - data
    CreateAppVersionsRequest:
      type: object
      properties:
        appVersion:
          type: string
          description: フォーマットは次のとおりにして下さい。 xx.xx.xx, xxには一桁または二桁の数字を入力します。
          example: 1.2.3
      required:
        - appVersion
    CreateInquiryRequest:
      type: object
      properties:
        inquiriesType:
          type: string
          enum:
            - SERVICE_SPEC
            - ACCOUNT_INFO
            - CHAT_INTEGRATION
            - NOTIFICATION
            - CUSTOM_BUTTON
            - EMPLOYEE_INFO
            - EXTENSION_LINK
            - APPOINTMENT_REGISTRATION
            - VISITOR_HISTORY
            - RECEPTION_FLOW
            - PRICING_PLAN
            - OTHER
        content:
          type: string
      required:
        - inquiriesType
        - content
    IpRestrictions:
      type: object
      properties:
        version:
          type: number
        ipWhiteList:
          type: array
          items:
            type: string
      required:
        - version
        - ipWhiteList
    IpRestrictionsResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/IpRestrictions'
      required:
        - data
    UpdateIpRestrictionReq:
      type: object
      properties:
        version:
          type: number
          minimum: 1
        ipWhiteList:
          type: array
          items:
            $ref: '#/components/schemas/UpdateIpWhiteData'
      required:
        - version
        - ipWhiteList
